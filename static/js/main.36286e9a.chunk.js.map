{"version":3,"sources":["img/arrow.svg","img/edit.svg","components/AddPage/AddPage.jsx","components/Notes/Note/Note.jsx","components/Notes/Notes.jsx","components/Pages/Page/Page.jsx","components/Pages/Pages.jsx","App.jsx","index.js"],"names":["module","exports","AddPage","addPage","setShowAddPage","className","onClick","type","placeholder","onKeyDown","e","Note","changeNote","moveNote","allPages","pageName","id","title","done","removeNote","toggleDone","useState","showDropdown","setShowDropdown","editTitleMode","setEditTitleMode","key","autoFocus","defaultValue","readOnly","checked","src","Edit","alt","Arrow","length","filter","page","map","Notes","state","addNote","to","note","Page","removePage","Pages","Object","keys","hideAlert","App","showAddPage","showAlert","setShowAlert","alertContent","setAlertContent","JSON","parse","localStorage","getItem","setState","useEffect","setItem","stringify","clearInterval","setTimeout","target","value","trim","some","toLowerCase","replace","obj","Date","now","fromPage","toPage","noteId","href","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","exact","path","match","ReactDOM","render","document","getElementById"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,wPCE9BC,G,MAAU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,eACjC,OACE,yBAAKC,UAAU,YACb,yBAAKA,UAAU,gBACb,4BAAQA,UAAU,wBAAwBC,QAAS,kBAAMF,GAAe,KAAxE,QAGA,wBAAIC,UAAU,cAAd,aAEF,2BAAOE,KAAK,OAAOF,UAAU,eAAeG,YAAY,kBAAkBC,UAAW,SAAAC,GAAC,OAAIP,EAAQO,MAClG,gC,kDCPOC,EAAO,SAAC,GAA2F,IAAzFC,EAAwF,EAAxFA,WAAYC,EAA4E,EAA5EA,SAAUC,EAAkE,EAAlEA,SAAUC,EAAwD,EAAxDA,SAAUC,EAA8C,EAA9CA,GAAIC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAAiB,EACrEC,oBAAS,GAD4D,mBACtGC,EADsG,KACxFC,EADwF,OAEnEF,oBAAS,GAF0D,mBAEtGG,EAFsG,KAEvFC,EAFuF,KAG7G,OACE,wBAAIpB,UAAU,mBACXmB,EACC,2BACEf,UAAW,SAAAC,GACK,UAAVA,EAAEgB,MACJd,EAAWF,EAAGK,EAAUC,GACxBS,GAAiB,KAGrBE,WAAS,EACTtB,UAAU,eACVuB,aAAcX,IAGhB,oCACE,yBAAKZ,UAAU,gBACb,2BAAOE,KAAK,WAAWsB,UAAQ,EAACC,QAASZ,EAAMZ,QAAS,kBAAMc,EAAWL,EAAUC,MADrF,WAGGE,EAAO,2BAAID,GAAa,8BAAOA,GAHlC,OAKE,yBAAKX,QAAS,kBAAMmB,GAAkBD,IAAgBnB,UAAU,OAAO0B,IAAKC,IAAMC,IAAI,MAExF,yBAAK5B,UAAU,WACb,4BAAQC,QAAS,SAAAI,GAAC,OAAIS,EAAWT,EAAGK,EAAUC,IAAKX,UAAU,iCAA7D,QAGA,4BAAQC,QAAS,kBAAMiB,GAAiBD,IAAejB,UAAU,yCAC/D,yBAAK0B,IAAKG,IAAOD,IAAI,MACpBX,GACC,yBAAKjB,UAAU,YACb,8CACCS,EAASqB,OAAS,EACjBrB,EACGsB,QAAO,SAAAC,GAAI,OAAIA,IAAStB,KACxBuB,KAAI,SAAAD,GACH,OACE,yBAAKhC,UAAU,eAAeC,QAAS,kBAAMO,EAASE,EAAUsB,EAAMrB,KACpE,mCADF,OACsB,8BAAOqB,OAKnC,yBAAKhC,UAAU,eAAf,wBC9CPkC,EAAQ,SAAC,GAAqF,IAApF3B,EAAmF,EAAnFA,WAAY4B,EAAuE,EAAvEA,MAAO3B,EAAgE,EAAhEA,SAAU4B,EAAsD,EAAtDA,QAAS3B,EAA6C,EAA7CA,SAAUuB,EAAmC,EAAnCA,KAAMlB,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WACvF,OACE,yBAAKf,UAAU,SACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAASqC,GAAG,UACV,yBAAKrC,UAAU,YAAY0B,IAAKG,IAAOD,IAAI,eAE7C,wBAAI5B,UAAU,cAAcgC,IAE9B,2BAAO9B,KAAK,OAAOC,YAAY,eAAeH,UAAU,eAAeI,UAAW,SAAAC,GAAC,OAAI+B,EAAQ/B,EAAG2B,MAClG,6BACA,wBAAIhC,UAAU,cACXmC,EAAMH,GAAMF,OACXK,EAAMH,GAAMC,KAAI,SAAAK,GACd,OACE,kBAAC,EAAD,CACE/B,WAAYA,EACZC,SAAUA,EACVC,SAAUA,EACVC,SAAUsB,EACVX,IAAKiB,EAAK3B,GACVA,GAAI2B,EAAK3B,GACTC,MAAO0B,EAAK1B,MACZC,KAAMyB,EAAKzB,KACXC,WAAYA,EACZC,WAAYA,OAKlB,wBAAIf,UAAU,eAAd,uBC/BGuC,G,MAAO,SAAC,GAA8B,IAA5B7B,EAA2B,EAA3BA,SAAU8B,EAAiB,EAAjBA,WAC/B,OACE,yBAAKxC,UAAU,kBACb,8BAAOU,GACP,yBAAKV,UAAU,WACb,kBAAC,IAAD,CAASqC,GAAI3B,EAAUV,UAAU,qBAAjC,QAGA,4BAAQC,QAAS,kBAAMuC,EAAW9B,IAAWV,UAAU,kBAAvD,cCTKyC,EAAQ,SAAC,GAA2B,IAAzBN,EAAwB,EAAxBA,MAAOK,EAAiB,EAAjBA,WAC7B,OACE,yBAAKxC,UAAU,SACZ0C,OAAOC,KAAKR,GAAOL,OAClBY,OAAOC,KAAKR,GAAOF,KAAI,SAAAD,GACrB,OAAO,kBAAC,EAAD,CAAMQ,WAAYA,EAAYnB,IAAKW,EAAMtB,SAAUsB,OAG5D,wBAAIhC,UAAU,eAAd,8BCHJ4C,EAAY,KA+LDC,MA9Lf,WAAgB,IAAD,EACyB7B,oBAAS,GADlC,mBACN8B,EADM,KACO/C,EADP,OAEqBiB,oBAAS,GAF9B,mBAEN+B,EAFM,KAEKC,EAFL,OAG2BhC,mBAAS,CAC/Cd,KAAM,UACNU,MAAO,qBALI,mBAGNqC,EAHM,KAGQC,EAHR,OAOalC,mBAASmC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAPnE,mBAONnB,EAPM,KAOCoB,EAPD,KAQbC,qBAAU,WACRH,aAAaI,QAAQ,QAASN,KAAKO,UAAUvB,MAC5C,CAACA,IAEJ,IAAMrC,EAAU,SAAAO,GACA,UAAVA,EAAEgB,MACJsC,cAAcf,GACdA,EAAYgB,YAAW,WACrBZ,GAAa,KACZ,KACHA,GAAa,GACT3C,EAAEwD,OAAOC,MAAMC,OAEfrB,OAAOC,KAAKR,GAAO6B,MAAK,SAAAtD,GAAQ,OAAIA,EAASuD,gBAAkB5D,EAAEwD,OAAOC,MAAMI,QAAQ,MAAO,KAAKH,OAAOE,iBAEzGf,EAAgB,CAAEhD,KAAM,UAAWU,MAAO,8BAE1C2C,EAAS,2BAAGlD,EAAEwD,OAAOC,MAAMC,OAAS,IAAO5B,IAC3Ce,EAAgB,CAAEhD,KAAM,UAAWU,MAAO,qBAC1CP,EAAEwD,OAAOC,MAAQ,IAGnBZ,EAAgB,CAAEhD,KAAM,UAAWU,MAAO,uBAK1C4B,EAAa,SAAA9B,GACjBiD,cAAcf,GACdA,EAAYgB,YAAW,WACrBZ,GAAa,KACZ,KACHA,GAAa,GACb,IAAImB,EAAG,eAAQhC,UACRgC,EAAIzD,GACX6C,EAASY,GACTjB,EAAgB,CAAEhD,KAAM,SAAUU,MAAO,kBAGrCwB,EAAU,SAAC/B,EAAGK,GACJ,UAAVL,EAAEgB,MACJsC,cAAcf,GACdA,EAAYgB,YAAW,WACrBZ,GAAa,KACZ,KACHA,GAAa,GACT3C,EAAEwD,OAAOC,MAAMC,QACjBR,EAAS,2BACJpB,GADG,kBAELzB,EAFK,CAEO,CAAEC,GAAIyD,KAAKC,MAAOzD,MAAOP,EAAEwD,OAAOC,MAAMC,OAAQlD,MAAM,IAF7D,mBAEyEsB,EAAMzB,QAEvFL,EAAEwD,OAAOC,MAAQ,GACjBZ,EAAgB,CAAEhD,KAAM,UAAWU,MAAO,sBAE1CsC,EAAgB,CAAEhD,KAAM,UAAWU,MAAO,uBAK1CE,EAAa,SAACT,EAAGK,EAAUC,GAC/BgD,cAAcf,GACdA,EAAYgB,YAAW,WACrBZ,GAAa,KACZ,KACHA,GAAa,GACbO,EAAS,2BACJpB,GADG,kBAELzB,EAAWyB,EAAMzB,GAAUqB,QAAO,SAAAO,GAAI,OAAIA,EAAK3B,KAAOA,QAEzDN,EAAEwD,OAAOC,MAAQ,GACjBZ,EAAgB,CAAEhD,KAAM,SAAUU,MAAO,kBAGrCJ,EAAW,SAAC8D,EAAUC,EAAQC,GAAY,IAAD,EAC7Cb,cAAcf,GACdA,EAAYgB,YAAW,WACrBZ,GAAa,KACZ,KACHA,GAAa,GACbO,EAAS,2BACJpB,GADG,uBAELoC,EAFK,sBAEQpC,EAAMmC,GAAUvC,QAAO,SAAAO,GAAI,OAAIA,EAAK3B,KAAO6D,MAFnD,YAE+DrC,EAAMoC,MAFrE,cAGLD,EAAWnC,EAAMmC,GAAUvC,QAAO,SAAAO,GAAI,OAAIA,EAAK3B,KAAO6D,MAHjD,KAKRtB,EAAgB,CAAEhD,KAAM,UAAWU,MAAM,kBAAD,OAAoB2D,EAApB,QAGpChE,EAAa,SAACF,EAAGK,EAAU8D,GAC/Bb,cAAcf,GACdA,EAAYgB,YAAW,WACrBZ,GAAa,KACZ,KACHA,GAAa,GAET3C,EAAEwD,OAAOC,MAAMC,QACjBR,EAAS,2BACJpB,GADG,kBAELzB,EAAWyB,EAAMzB,GAAUuB,KAAI,SAAAK,GAC9B,OAAOA,EAAK3B,KAAO6D,EAAZ,2BAA0BlC,GAA1B,IAAgC1B,MAAOP,EAAEwD,OAAOC,MAAMC,SAAWzB,QAG5EY,EAAgB,CAAEhD,KAAM,UAAWU,MAAO,kBAE1CsC,EAAgB,CAAEhD,KAAM,UAAWU,MAAO,sBAIxCG,EAAa,SAACL,EAAUC,GAC5B4C,EAAS,2BACJpB,GADG,kBAELzB,EAAWyB,EAAMzB,GAAUuB,KAAI,SAAAK,GAC9B,OAAOA,EAAK3B,KAAOA,EAAZ,2BAAsB2B,GAAtB,IAA4BzB,MAAOyB,EAAKzB,OAASyB,SAK9D,OACE,oCACE,yBAAKtC,UAAU,+CACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,eAAeyE,KAAK,KAClC,0BAAMzE,UAAU,QAAhB,aAEF,4BAAQA,UAAU,wBAAwBC,QAAS,kBAAMF,GAAe,KAAxE,gBAKJ,kBAAC2E,EAAA,EAAD,CAAeC,GAAI5B,EAAW6B,QAAS,IAAKC,WAAW,QAAQC,cAAY,EAACC,eAAa,GACvF,yBAAK/E,UAAS,sBAAiBiD,EAAa/C,KAA9B,uBACZ,8CADF,IAC+B+C,EAAarC,MAC1C,4BAAQZ,UAAU,QAAQC,QAAS,kBAAM+C,GAAa,KAAtD,UAKJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgC,OAAK,EAACC,KAAM,CAAC,IAAK,WACvB,wBAAIjF,UAAU,gBAAd,cAEF,kBAAC,IAAD,CAAOgF,OAAK,EAACC,KAAK,KAChB,wBAAIjF,UAAU,gBAAd,WAGJ,yBAAKA,UAAU,4BACb,kBAAC,IAAD,CAAOgF,OAAK,EAACC,KAAM,CAAC,IAAK,YACtB,gBAAGC,EAAH,EAAGA,MAAH,OACC,kBAACR,EAAA,EAAD,CAAeE,QAAS,IAAKC,WAAW,QAAQF,GAAa,MAATO,EAAeH,eAAa,GAC9E,yBAAK/E,UAAU,YACZ8C,GAAe,kBAAC,EAAD,CAAS/C,eAAgBA,EAAgBD,QAASA,IAClE,kBAAC,EAAD,CAAOqC,MAAOA,EAAOK,WAAYA,SAKxCE,OAAOC,KAAKR,GAAOF,KAAI,SAAAD,GACtB,OACE,kBAAC,IAAD,CAAOX,IAAKW,EAAMgD,OAAK,EAACC,KAAI,WAAMjD,KAC/B,gBAAGkD,EAAH,EAAGA,MAAH,OACC,kBAACR,EAAA,EAAD,CAAeE,QAAS,IAAKC,WAAW,OAAOF,GAAa,MAATO,EAAeH,eAAa,GAC7E,yBAAK/E,UAAU,YACb,kBAAC,EAAD,CACEO,WAAYA,EACZ4B,MAAOA,EACP3B,SAAUA,EACV4B,QAASA,EACT3B,SAAUiC,OAAOC,KAAKR,GACtBH,KAAMA,EACNlB,WAAYA,EACZC,WAAYA,eCpLlCoE,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.36286e9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.7761680a.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.4dfa0c72.svg\";","import React from \"react\"\r\n\r\nexport const AddPage = ({ addPage, setShowAddPage }) => {\r\n  return (\r\n    <div className=\"add-page\">\r\n      <div className=\"page-heiding\">\r\n        <button className=\"btn btn-danger btn-sm\" onClick={() => setShowAddPage(false)}>\r\n          Hide\r\n        </button>\r\n        <h2 className=\"text-right\">Add page</h2>\r\n      </div>\r\n      <input type=\"text\" className=\"form-control\" placeholder=\"Enter page name\" onKeyDown={e => addPage(e)} />\r\n      <hr />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport \"./Note.scss\"\r\nimport Arrow from \"../../../img/arrow.svg\"\r\nimport Edit from \"../../../img/edit.svg\"\r\n\r\nexport const Note = ({ changeNote, moveNote, allPages, pageName, id, title, done, removeNote, toggleDone }) => {\r\n  const [showDropdown, setShowDropdown] = useState(false)\r\n  const [editTitleMode, setEditTitleMode] = useState(false)\r\n  return (\r\n    <li className=\"list-group-item\">\r\n      {editTitleMode ? (\r\n        <input\r\n          onKeyDown={e => {\r\n            if (e.key === \"Enter\") {\r\n              changeNote(e, pageName, id)\r\n              setEditTitleMode(false)\r\n            }\r\n          }}\r\n          autoFocus\r\n          className=\"form-control\"\r\n          defaultValue={title}\r\n        />\r\n      ) : (\r\n        <>\r\n          <div className=\"note-content\">\r\n            <input type=\"checkbox\" readOnly checked={done} onClick={() => toggleDone(pageName, id)} />\r\n            &nbsp;&nbsp;\r\n            {done ? <s>{title}</s> : <span>{title}</span>}\r\n            &nbsp;\r\n            <img onClick={() => setEditTitleMode(!editTitleMode)} className=\"edit\" src={Edit} alt=\"\" />\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <button onClick={e => removeNote(e, pageName, id)} className=\"btn btn-outline-danger btn-sm\">\r\n              &times;\r\n            </button>\r\n            <button onClick={() => setShowDropdown(!showDropdown)} className=\"btn btn-primary btn-sm dropdownToggle\">\r\n              <img src={Arrow} alt=\":\" />\r\n              {showDropdown && (\r\n                <div className=\"dropdown\">\r\n                  <h6>Where to move?</h6>\r\n                  {allPages.length > 1 ? (\r\n                    allPages\r\n                      .filter(page => page !== pageName)\r\n                      .map(page => {\r\n                        return (\r\n                          <div className=\"dropdownItem\" onClick={() => moveNote(pageName, page, id)}>\r\n                            <span>-</span>&nbsp;<span>{page}</span>\r\n                          </div>\r\n                        )\r\n                      })\r\n                  ) : (\r\n                    <div className=\"text-center\">No other pages</div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </li>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { Note } from \"./Note/Note\"\r\nimport Arrow from \"../../img/arrow.svg\"\r\n\r\nexport const Notes = ({changeNote, state, moveNote, addNote, allPages, page, removeNote, toggleDone }) => {\r\n  return (\r\n    <div className=\"notes\">\r\n      <div className=\"page-heiding\">\r\n        <NavLink to=\"/pages\">\r\n          <img className=\"come-back\" src={Arrow} alt=\"come back\" />\r\n        </NavLink>\r\n        <h2 className=\"text-right\">{page}</h2>\r\n      </div>\r\n      <input type=\"text\" placeholder=\"Enter a note\" className=\"form-control\" onKeyDown={e => addNote(e, page)} />\r\n      <hr></hr>\r\n      <ul className=\"list-group\">\r\n        {state[page].length ? (\r\n          state[page].map(note => {\r\n            return (\r\n              <Note\r\n                changeNote={changeNote}\r\n                moveNote={moveNote}\r\n                allPages={allPages}\r\n                pageName={page}\r\n                key={note.id}\r\n                id={note.id}\r\n                title={note.title}\r\n                done={note.done}\r\n                removeNote={removeNote}\r\n                toggleDone={toggleDone}\r\n              />\r\n            )\r\n          })\r\n        ) : (\r\n          <h2 className=\"text-center\">Page is empty...</h2>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport \"./Page.scss\"\r\n\r\nexport const Page = ({ pageName, removePage }) => {\r\n  return (\r\n    <div className=\"container page\">\r\n      <span>{pageName}</span>\r\n      <div className=\"buttons\">\r\n        <NavLink to={pageName} className=\"btn btn-dark mr-1\">\r\n          Open\r\n        </NavLink>\r\n        <button onClick={() => removePage(pageName)} className=\"btn btn-danger\">\r\n          delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Page } from \"./Page/Page\"\r\n\r\nexport const Pages = ({ state, removePage }) => {\r\n  return (\r\n    <div className=\"pages\">\r\n      {Object.keys(state).length ? (\r\n        Object.keys(state).map(page => {\r\n          return <Page removePage={removePage} key={page} pageName={page} />\r\n        })\r\n      ) : (\r\n        <h2 className=\"text-center\">The notebook is empty...</h2>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport \"./App.scss\"\r\nimport { AddPage } from \"./components/AddPage/AddPage\"\r\nimport { Notes } from \"./components/Notes/Notes\"\r\nimport { Pages } from \"./components/Pages/Pages\"\r\n\r\nlet hideAlert = null\r\nfunction App() {\r\n  const [showAddPage, setShowAddPage] = useState(false)\r\n  const [showAlert, setShowAlert] = useState(false)\r\n  const [alertContent, setAlertContent] = useState({\r\n    type: \"success\",\r\n    title: \"Page was created\",\r\n  })\r\n  const [state, setState] = useState(JSON.parse(localStorage.getItem(\"state\")) || {})\r\n  useEffect(() => {\r\n    localStorage.setItem(\"state\", JSON.stringify(state))\r\n  }, [state])\r\n\r\n  const addPage = e => {\r\n    if (e.key === \"Enter\") {\r\n      clearInterval(hideAlert)\r\n      hideAlert = setTimeout(() => {\r\n        setShowAlert(false)\r\n      }, 3000)\r\n      setShowAlert(true)\r\n      if (e.target.value.trim()) {\r\n        if (\r\n          Object.keys(state).some(pageName => pageName.toLowerCase() === e.target.value.replace(/ +/g, \" \").trim().toLowerCase())\r\n        ) {\r\n          setAlertContent({ type: \"warning\", title: \"such page already exists\" })\r\n        } else {\r\n          setState({ [e.target.value.trim()]: [], ...state })\r\n          setAlertContent({ type: \"success\", title: \"Page was created\" })\r\n          e.target.value = \"\"\r\n        }\r\n      } else {\r\n        setAlertContent({ type: \"warning\", title: \"Enter page title\" })\r\n      }\r\n    }\r\n  }\r\n\r\n  const removePage = pageName => {\r\n    clearInterval(hideAlert)\r\n    hideAlert = setTimeout(() => {\r\n      setShowAlert(false)\r\n    }, 3000)\r\n    setShowAlert(true)\r\n    let obj = { ...state }\r\n    delete obj[pageName]\r\n    setState(obj)\r\n    setAlertContent({ type: \"danger\", title: \"Page deleted\" })\r\n  }\r\n\r\n  const addNote = (e, pageName) => {\r\n    if (e.key === \"Enter\") {\r\n      clearInterval(hideAlert)\r\n      hideAlert = setTimeout(() => {\r\n        setShowAlert(false)\r\n      }, 3000)\r\n      setShowAlert(true)\r\n      if (e.target.value.trim()) {\r\n        setState({\r\n          ...state,\r\n          [pageName]: [{ id: Date.now(), title: e.target.value.trim(), done: false }, ...state[pageName]],\r\n        })\r\n        e.target.value = \"\"\r\n        setAlertContent({ type: \"success\", title: \"Note was created\" })\r\n      } else {\r\n        setAlertContent({ type: \"warning\", title: \"Enter note title\" })\r\n      }\r\n    }\r\n  }\r\n\r\n  const removeNote = (e, pageName, id) => {\r\n    clearInterval(hideAlert)\r\n    hideAlert = setTimeout(() => {\r\n      setShowAlert(false)\r\n    }, 3000)\r\n    setShowAlert(true)\r\n    setState({\r\n      ...state,\r\n      [pageName]: state[pageName].filter(note => note.id !== id),\r\n    })\r\n    e.target.value = \"\"\r\n    setAlertContent({ type: \"danger\", title: \"Note deleted\" })\r\n  }\r\n\r\n  const moveNote = (fromPage, toPage, noteId) => {\r\n    clearInterval(hideAlert)\r\n    hideAlert = setTimeout(() => {\r\n      setShowAlert(false)\r\n    }, 3000)\r\n    setShowAlert(true)\r\n    setState({\r\n      ...state,\r\n      [toPage]: [...state[fromPage].filter(note => note.id === noteId), ...state[toPage]],\r\n      [fromPage]: state[fromPage].filter(note => note.id !== noteId),\r\n    })\r\n    setAlertContent({ type: \"success\", title: `Note moved to \"${toPage}\"` })\r\n  }\r\n\r\n  const changeNote = (e, pageName, noteId) => {\r\n    clearInterval(hideAlert)\r\n    hideAlert = setTimeout(() => {\r\n      setShowAlert(false)\r\n    }, 3000)\r\n    setShowAlert(true)\r\n\r\n    if (e.target.value.trim()) {\r\n      setState({\r\n        ...state,\r\n        [pageName]: state[pageName].map(note => {\r\n          return note.id === noteId ? { ...note, title: e.target.value.trim() } : note\r\n        }),\r\n      })\r\n      setAlertContent({ type: \"success\", title: \"Note changed\" })\r\n    } else {\r\n      setAlertContent({ type: \"warning\", title: \"Enter note title\" })\r\n    }\r\n  }\r\n\r\n  const toggleDone = (pageName, id) => {\r\n    setState({\r\n      ...state,\r\n      [pageName]: state[pageName].map(note => {\r\n        return note.id === id ? { ...note, done: !note.done } : note\r\n      }),\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <span className=\"navbar-brand\" href=\"#\">\r\n            <span className=\"logo\">NOTEBOOK</span>\r\n          </span>\r\n          <button className=\"btn btn-light ml-auto\" onClick={() => setShowAddPage(true)}>\r\n            + Add page\r\n          </button>\r\n        </div>\r\n      </nav>\r\n      <CSSTransition in={showAlert} timeout={500} classNames=\"alert\" mountOnEnter unmountOnExit>\r\n        <div className={`alert alert-${alertContent.type} alert-dismissible`}>\r\n          <strong>Attention!</strong> {alertContent.title}\r\n          <button className=\"close\" onClick={() => setShowAlert(false)}>\r\n            &times;\r\n          </button>\r\n        </div>\r\n      </CSSTransition>\r\n      <Switch>\r\n        <Route exact path={[\"/\", \"/pages\"]}>\r\n          <h1 className=\" text-center\">All pages</h1>\r\n        </Route>\r\n        <Route exact path=\"*\">\r\n          <h1 className=\" text-center\">Notes</h1>\r\n        </Route>\r\n      </Switch>\r\n      <div className=\"container pt-4 all-pages\">\r\n        <Route exact path={[\"/\", \"/pages\"]}>\r\n          {({ match }) => (\r\n            <CSSTransition timeout={700} classNames=\"pages\" in={match != null} unmountOnExit>\r\n              <div className=\"absolute\">\r\n                {showAddPage && <AddPage setShowAddPage={setShowAddPage} addPage={addPage} />}\r\n                <Pages state={state} removePage={removePage} />\r\n              </div>\r\n            </CSSTransition>\r\n          )}\r\n        </Route>\r\n        {Object.keys(state).map(page => {\r\n          return (\r\n            <Route key={page} exact path={`/${page}`}>\r\n              {({ match }) => (\r\n                <CSSTransition timeout={700} classNames=\"page\" in={match != null} unmountOnExit>\r\n                  <div className=\"absolute\">\r\n                    <Notes\r\n                      changeNote={changeNote}\r\n                      state={state}\r\n                      moveNote={moveNote}\r\n                      addNote={addNote}\r\n                      allPages={Object.keys(state)}\r\n                      page={page}\r\n                      removeNote={removeNote}\r\n                      toggleDone={toggleDone}\r\n                    />\r\n                  </div>\r\n                </CSSTransition>\r\n              )}\r\n            </Route>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById('root'));\r\n"],"sourceRoot":""}