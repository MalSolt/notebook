{"version":3,"sources":["img/arrow.svg","components/AddPage/AddPage.jsx","components/Notes/Note/Note.jsx","components/Notes/Notes.jsx","components/Pages/Page/Page.jsx","components/Pages/Pages.jsx","App.jsx","index.js"],"names":["module","exports","AddPage","addPage","className","to","src","Arrow","alt","type","placeholder","onKeyDown","e","Note","pageName","id","title","done","removeNote","toggleDone","readOnly","checked","onClick","Notes","addNote","state","page","length","map","note","key","Page","removePage","Pages","Object","keys","hideAlert","App","useState","showAlert","setShowAlert","alertContent","setAlertContent","history","useHistory","JSON","parse","localStorage","getItem","setState","useEffect","setItem","stringify","clearInterval","setTimeout","target","value","trim","push","obj","Date","now","filter","href","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","exact","path","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8c9157f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.7761680a.svg\";","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport Arrow from \"../../img/arrow.svg\"\r\n\r\nexport const AddPage = ({ addPage }) => {\r\n  return (\r\n    <div className=\"add-page\">\r\n      <div className=\"page-heiding\">\r\n        <NavLink to=\"/pages\">\r\n          <img className=\"come-back\" src={Arrow} alt=\"come back\" />\r\n        </NavLink>\r\n        <h2 className=\"text-right\">Add page</h2>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Enter page name\"\r\n        onKeyDown={e => addPage(e)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport \"./Note.scss\"\r\n\r\nexport const Note = ({ pageName, id, title, done, removeNote, toggleDone }) => (\r\n  <li className=\"list-group-item\">\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        readOnly\r\n        checked={done}\r\n        onClick={() => toggleDone(pageName, id)}\r\n      />\r\n      &nbsp; {done ? <s>{title}</s> : <span>{title}</span>}\r\n    </div>\r\n    <button\r\n      onClick={e => removeNote(e, pageName, id)}\r\n      className=\"btn btn-outline-danger btn-sm\"\r\n    >\r\n      &times;\r\n    </button>\r\n  </li>\r\n)\r\n","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { Note } from \"./Note/Note\"\r\nimport Arrow from \"../../img/arrow.svg\"\r\n\r\nexport const Notes = ({ addNote, state, page, removeNote, toggleDone }) => {\r\n  return (\r\n    <div className=\"notes\">\r\n      <div className=\"page-heiding\">\r\n        <NavLink to=\"/pages\">\r\n          <img className=\"come-back\" src={Arrow} alt=\"come back\" />\r\n        </NavLink>\r\n        <h2 className=\"text-right\">{page}</h2>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter a note\"\r\n        className=\"form-control\"\r\n        onKeyDown={e => addNote(e, page)}\r\n      />\r\n      <hr></hr>\r\n      <ul className=\"list-group\">\r\n        {state[page].length ? (\r\n          state[page].map(note => {\r\n            return (\r\n              <Note\r\n                pageName={page}\r\n                key={note.id}\r\n                id={note.id}\r\n                title={note.title}\r\n                done={note.done}\r\n                removeNote={removeNote}\r\n                toggleDone={toggleDone}\r\n              />\r\n            )\r\n          })\r\n        ) : (\r\n          <h2 className=\"text-center\">Page is empty...</h2>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport \"./Page.scss\"\r\n\r\nexport const Page = ({ pageName, removePage }) => {\r\n  return (\r\n    <div className=\"container page\">\r\n      <span>{pageName}</span>\r\n      <div className=\"buttons\">\r\n        <NavLink to={pageName} className=\"btn btn-dark mr-1\">\r\n          Open\r\n        </NavLink>\r\n        <button onClick={() => removePage(pageName)} className=\"btn btn-danger\">\r\n          delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Page } from \"./Page/Page\"\r\n\r\nexport const Pages = ({ state, removePage }) => {\r\n  return (\r\n    <div className=\"pages\">\r\n      {Object.keys(state).length ? (\r\n        Object.keys(state).map(page => {\r\n          return <Page removePage={removePage} key={page} pageName={page} />\r\n        })\r\n      ) : (\r\n        <h2 className=\"text-center\">The notebook is empty...</h2>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { NavLink, Route, Switch, useHistory } from \"react-router-dom\"\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport \"./App.scss\"\r\nimport { AddPage } from \"./components/AddPage/AddPage\"\r\nimport { Notes } from \"./components/Notes/Notes\"\r\nimport { Pages } from \"./components/Pages/Pages\"\r\n\r\nlet hideAlert = null\r\nfunction App() {\r\n  const [showAlert, setShowAlert] = useState(false)\r\n  const [alertContent, setAlertContent] = useState({\r\n    type: \"success\",\r\n    title: \"Page was created\",\r\n  })\r\n  const history = useHistory()\r\n  const [state, setState] = useState(\r\n    JSON.parse(localStorage.getItem(\"state\")) || {}\r\n  )\r\n  useEffect(() => {\r\n    localStorage.setItem(\"state\", JSON.stringify(state))\r\n  }, [state])\r\n\r\n  const addPage = e => {\r\n    if (e.key === \"Enter\") {\r\n      clearInterval(hideAlert)\r\n      hideAlert = setTimeout(() => {\r\n        setShowAlert(false)\r\n      }, 3000)\r\n      setShowAlert(true)\r\n      if (e.target.value.trim()) {\r\n        setState({ [e.target.value.trim()]: [], ...state })\r\n        e.target.value = \"\"\r\n        history.push(\"/pages\")\r\n        setAlertContent({ type: \"success\", title: \"Page was created\" })\r\n      } else {\r\n        setAlertContent({ type: \"warning\", title: \"Enter page title\" })\r\n      }\r\n    }\r\n  }\r\n\r\n  const removePage = pageName => {\r\n    clearInterval(hideAlert)\r\n    hideAlert = setTimeout(() => {\r\n      setShowAlert(false)\r\n    }, 3000)\r\n    setShowAlert(true)\r\n    let obj = { ...state }\r\n    delete obj[pageName]\r\n    setState(obj)\r\n    setAlertContent({ type: \"danger\", title: \"Page deleted\" })\r\n  }\r\n\r\n  const addNote = (e, pageName) => {\r\n    if (e.key === \"Enter\") {\r\n      clearInterval(hideAlert)\r\n      hideAlert = setTimeout(() => {\r\n        setShowAlert(false)\r\n      }, 3000)\r\n      setShowAlert(true)\r\n      if (e.target.value.trim()) {\r\n        setState({\r\n          ...state,\r\n          [pageName]: [\r\n            { id: Date.now(), title: e.target.value.trim(), done: false },\r\n            ...state[pageName],\r\n          ],\r\n        })\r\n        e.target.value = \"\"\r\n        setAlertContent({ type: \"success\", title: \"Note was created\" })\r\n      } else {\r\n        setAlertContent({ type: \"warning\", title: \"Enter note title\" })\r\n      }\r\n    }\r\n  }\r\n\r\n  const removeNote = (e, pageName, id) => {\r\n    clearInterval(hideAlert)\r\n    hideAlert = setTimeout(() => {\r\n      setShowAlert(false)\r\n    }, 3000)\r\n    setShowAlert(true)\r\n    setState({\r\n      ...state,\r\n      [pageName]: state[pageName].filter(note => note.id !== id),\r\n    })\r\n    e.target.value = \"\"\r\n    setAlertContent({ type: \"danger\", title: \"Note deleted\" })\r\n  }\r\n\r\n  const toggleDone = (pageName, id) => {\r\n    setState({\r\n      ...state,\r\n      [pageName]: state[pageName].map(note => {\r\n        return note.id === id ? { ...note, done: !note.done } : note\r\n      }),\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <span className=\"navbar-brand\" href=\"#\">\r\n            <span className=\"logo\">NOTEBOOK</span>\r\n          </span>\r\n          <NavLink to=\"/addPage\">\r\n            <button className=\"btn btn-light ml-auto\">+ Add page</button>\r\n          </NavLink>\r\n        </div>\r\n      </nav>\r\n      <CSSTransition\r\n        in={showAlert}\r\n        timeout={500}\r\n        classNames=\"alert\"\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        <div className={`alert alert-${alertContent.type} alert-dismissible`}>\r\n          <strong>Attention!</strong> {alertContent.title}\r\n          <button className=\"close\" onClick={() => setShowAlert(false)}>\r\n            &times;\r\n          </button>\r\n        </div>\r\n      </CSSTransition>\r\n      <Switch>\r\n        <Route exact path=\"/addPage\">\r\n          <h1 className=\" text-center\">Add page</h1>\r\n        </Route>\r\n        <Route exact path={[\"/\", \"/pages\"]}>\r\n          <h1 className=\" text-center\">All pages</h1>\r\n        </Route>\r\n        <Route exact path=\"*\">\r\n          <h1 className=\" text-center\">Notes</h1>\r\n        </Route>\r\n      </Switch>\r\n      <div className=\"container pt-4 all-pages\">\r\n        <Route exact path=\"/addPage\">\r\n          {({ match }) => (\r\n            <CSSTransition\r\n              timeout={700}\r\n              classNames=\"item\"\r\n              in={match != null}\r\n              unmountOnExit\r\n            >\r\n              <div className=\"absolute\">\r\n                <AddPage addPage={addPage} />\r\n              </div>\r\n            </CSSTransition>\r\n          )}\r\n        </Route>\r\n        <Route exact path={[\"/\", \"/pages\"]}>\r\n          {({ match }) => (\r\n            <CSSTransition\r\n              timeout={700}\r\n              classNames=\"pages\"\r\n              in={match != null}\r\n              unmountOnExit\r\n            >\r\n              <div className=\"absolute\">\r\n                <Pages state={state} removePage={removePage} />\r\n              </div>\r\n            </CSSTransition>\r\n          )}\r\n        </Route>\r\n        {/* <TransitionGroup> */}\r\n        {Object.keys(state).map(page => {\r\n          return (\r\n            <Route key={page} exact path={`/${page}`}>\r\n              {({ match }) => (\r\n                <CSSTransition\r\n                  timeout={700}\r\n                  classNames=\"item\"\r\n                  in={match != null}\r\n                  unmountOnExit\r\n                >\r\n                  <div className=\"absolute\">\r\n                    <Notes\r\n                      addNote={addNote}\r\n                      state={state}\r\n                      page={page}\r\n                      removeNote={removeNote}\r\n                      toggleDone={toggleDone}\r\n                    />\r\n                  </div>\r\n                </CSSTransition>\r\n              )}\r\n            </Route>\r\n          )\r\n        })}\r\n        {/* </TransitionGroup> */}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById('root'));\r\n"],"sourceRoot":""}