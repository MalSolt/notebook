{"version":3,"sources":["img/arrow.svg","components/AddPage/AddPage.jsx","components/Notes/Note/Note.jsx","components/Notes/Notes.jsx","components/Pages/Page/Page.jsx","components/Pages/Pages.jsx","App.jsx","index.js"],"names":["module","exports","AddPage","addPage","className","to","src","Arrow","alt","type","placeholder","onKeyDown","e","Note","pageName","id","title","done","removeNote","toggleDone","readOnly","checked","onClick","Notes","addNote","state","page","length","map","note","key","Page","removePage","Pages","Object","keys","hideAlert","App","useState","showAlert","setShowAlert","alertContent","setAlertContent","history","useHistory","JSON","parse","localStorage","getItem","setState","useEffect","setItem","stringify","clearInterval","setTimeout","target","value","trim","push","obj","Date","now","filter","href","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","exact","path","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8c9157f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.7761680a.svg\";","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport Arrow from '../../img/arrow.svg'\r\n\r\nexport const AddPage = ({addPage}) => {\r\n\treturn (\r\n\t\t<div className=\"add-page\">\r\n\t\t\t<div className=\"page-heiding\">\r\n\t\t\t\t<NavLink to=\"/pages\">\r\n\t\t\t\t\t<img className=\"come-back\" src={Arrow} alt=\"come back\" />\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<h2 className=\"text-right\">Add page</h2>\r\n\t\t\t</div>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\tplaceholder=\"Enter page name\"\r\n\t\t\t\tonKeyDown={e => addPage(e)}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\"\r\nimport \"./Note.scss\"\r\n\r\nexport const Note = ({ pageName, id, title, done, removeNote, toggleDone }) => (\r\n\t<li className=\"list-group-item\">\r\n\t\t<div>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\treadOnly\r\n\t\t\t\tchecked={done}\r\n\t\t\t\tonClick={() => toggleDone(pageName, id)}\r\n\t\t\t/>\r\n\t\t\t&nbsp; {done ? <s>{title}</s> : <span>{title}</span>}\r\n\t\t</div>\r\n\t\t<button\r\n\t\t\tonClick={e => removeNote(e, pageName, id)}\r\n\t\t\tclassName=\"btn btn-outline-danger btn-sm\"\r\n\t\t>\r\n\t\t\t&times;\r\n\t\t</button>\r\n\t</li>\r\n)\r\n","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { Note } from \"./Note/Note\"\r\nimport Arrow from \"../../img/arrow.svg\"\r\n\r\nexport const Notes = ({ addNote, state, page, removeNote, toggleDone }) => {\r\n\treturn (\r\n\t\t<div className=\"notes\">\r\n\t\t\t<div className=\"page-heiding\">\r\n\t\t\t\t<NavLink to=\"/pages\">\r\n\t\t\t\t\t<img className=\"come-back\" src={Arrow} alt=\"come back\" />\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<h2 className=\"text-right\">{page}</h2>\r\n\t\t\t</div>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"Enter a note\"\r\n\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\tonKeyDown={e => addNote(e, page)}\r\n\t\t\t/>\r\n\t\t\t<hr></hr>\r\n\t\t\t<ul className=\"list-group\">\r\n\t\t\t\t{state[page].length ? (\r\n\t\t\t\t\tstate[page].map(note => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Note\r\n\t\t\t\t\t\t\t\tpageName={page}\r\n\t\t\t\t\t\t\t\tkey={note.id}\r\n\t\t\t\t\t\t\t\tid={note.id}\r\n\t\t\t\t\t\t\t\ttitle={note.title}\r\n\t\t\t\t\t\t\t\tdone={note.done}\r\n\t\t\t\t\t\t\t\tremoveNote={removeNote}\r\n\t\t\t\t\t\t\t\ttoggleDone={toggleDone}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<h2 className=\"text-center\">Page is empty...</h2>\r\n\t\t\t\t)}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport \"./Page.scss\"\r\n\r\nexport const Page = ({ pageName, removePage }) => {\r\n\treturn (\r\n\t\t<div className=\"container page\">\r\n\t\t\t<span>{pageName}</span>\r\n\t\t\t<div className='buttons'>\r\n\t\t\t\t<NavLink to={pageName} className=\"btn btn-dark mr-1\">\r\n\t\t\t\t\tOpen\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<button onClick={() => removePage(pageName)} className=\"btn btn-danger\">\r\n\t\t\t\t\tdelete\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\"\r\nimport { Page } from \"./Page/Page\"\r\n\r\nexport const Pages = ({ state, removePage }) => {\r\n\treturn (\r\n\t\t<div className=\"pages\">\r\n\t\t\t{Object.keys(state).length ? (\r\n\t\t\t\tObject.keys(state).map(page => {\r\n\t\t\t\t\treturn <Page removePage={removePage} key={page} pageName={page} />\r\n\t\t\t\t})\r\n\t\t\t) : (\r\n\t\t\t\t<h2 className=\"text-center\">The notebook is empty...</h2>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from \"react\"\nimport { NavLink, Route, Switch, useHistory } from \"react-router-dom\"\nimport { CSSTransition } from \"react-transition-group\"\nimport \"./App.scss\"\nimport { AddPage } from \"./components/AddPage/AddPage\"\nimport { Notes } from \"./components/Notes/Notes\"\nimport { Pages } from \"./components/Pages/Pages\"\n\nlet hideAlert = null\nfunction App() {\n  const [showAlert, setShowAlert] = useState(false)\n  const [alertContent, setAlertContent] = useState({\n    type: \"success\",\n    title: \"Page was created\",\n  })\n  const history = useHistory()\n  const [state, setState] = useState(\n    JSON.parse(localStorage.getItem(\"state\")) || {}\n  )\n  useEffect(() => {\n    localStorage.setItem(\"state\", JSON.stringify(state))\n  }, [state])\n\n  const addPage = e => {\n    if (e.key === \"Enter\") {\n      clearInterval(hideAlert)\n      hideAlert = setTimeout(() => {\n        setShowAlert(false)\n      }, 3000)\n      setShowAlert(true)\n      if (e.target.value.trim()) {\n        setState({ [e.target.value.trim()]: [], ...state })\n        e.target.value = \"\"\n        history.push(\"/pages\")\n        setAlertContent({ type: \"success\", title: \"Page was created\" })\n      } else {\n        setAlertContent({ type: \"warning\", title: \"Enter page title\" })\n      }\n    }\n  }\n\n  const removePage = pageName => {\n    clearInterval(hideAlert)\n    hideAlert = setTimeout(() => {\n      setShowAlert(false)\n    }, 3000)\n    setShowAlert(true)\n    let obj = { ...state }\n    delete obj[pageName]\n    setState(obj)\n    setAlertContent({ type: \"danger\", title: \"Page deleted\" })\n  }\n\n  const addNote = (e, pageName) => {\n    if (e.key === \"Enter\") {\n      clearInterval(hideAlert)\n      hideAlert = setTimeout(() => {\n        setShowAlert(false)\n      }, 3000)\n      setShowAlert(true)\n      if (e.target.value.trim()) {\n        setState({\n          ...state,\n          [pageName]: [\n            { id: Date.now(), title: e.target.value.trim(), done: false },\n            ...state[pageName],\n          ],\n        })\n        e.target.value = \"\"\n        setAlertContent({ type: \"success\", title: \"Note was created\" })\n      } else {\n        setAlertContent({ type: \"warning\", title: \"Enter note title\" })\n      }\n    }\n  }\n\n  const removeNote = (e, pageName, id) => {\n    clearInterval(hideAlert)\n    hideAlert = setTimeout(() => {\n      setShowAlert(false)\n    }, 3000)\n    setShowAlert(true)\n    setState({\n      ...state,\n      [pageName]: state[pageName].filter(note => note.id !== id),\n    })\n    e.target.value = \"\"\n    setAlertContent({ type: \"danger\", title: \"Note deleted\" })\n  }\n\n  const toggleDone = (pageName, id) => {\n    setState({\n      ...state,\n      [pageName]: state[pageName].map(note => {\n        return note.id === id ? { ...note, done: !note.done } : note\n      }),\n    })\n  }\n\n  return (\n    <>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <div className=\"container\">\n          <span className=\"navbar-brand\" href=\"#\">\n            <span className=\"logo\">NOTEBOOK</span>\n          </span>\n          <NavLink to=\"/addPage\">\n            <button className=\"btn btn-light ml-auto\">+ Add page</button>\n          </NavLink>\n        </div>\n      </nav>\n      <CSSTransition\n        in={showAlert}\n        timeout={500}\n        classNames=\"alert\"\n        mountOnEnter\n        unmountOnExit\n      >\n        <div className={`alert alert-${alertContent.type} alert-dismissible`}>\n          <strong>Attention!</strong> {alertContent.title}\n          <button className=\"close\" onClick={() => setShowAlert(false)}>\n            &times;\n          </button>\n        </div>\n      </CSSTransition>\n      <Switch>\n        <Route exact path=\"/addPage\">\n          <h1 className=\" text-center\">Add page</h1>\n        </Route>\n        <Route exact path={[\"/\", \"/pages\"]}>\n          <h1 className=\" text-center\">All pages</h1>\n        </Route>\n        <Route exact path=\"*\">\n          <h1 className=\" text-center\">Notes</h1>\n        </Route>\n      </Switch>\n      <div className=\"container pt-4 all-pages\">\n        <Route exact path=\"/addPage\">\n          {({ match }) => (\n            <CSSTransition\n              timeout={700}\n              classNames=\"item\"\n              in={match != null}\n              unmountOnExit\n            >\n              <div className=\"absolute\">\n                <AddPage addPage={addPage} />\n              </div>\n            </CSSTransition>\n          )}\n        </Route>\n        <Route exact path={[\"/\", \"/pages\"]}>\n          {({ match }) => (\n            <CSSTransition\n              timeout={700}\n              classNames=\"pages\"\n              in={match != null}\n              unmountOnExit\n            >\n              <div className=\"absolute\">\n                <Pages state={state} removePage={removePage} />\n              </div>\n            </CSSTransition>\n          )}\n        </Route>\n        {/* <TransitionGroup> */}\n        {Object.keys(state).map(page => {\n          return (\n            <Route key={page} exact path={`/${page}`}>\n              {({ match }) => (\n                <CSSTransition\n                  timeout={700}\n                  classNames=\"item\"\n                  in={match != null}\n                  unmountOnExit\n                >\n                  <div className=\"absolute\">\n                    <Notes\n                      addNote={addNote}\n                      state={state}\n                      page={page}\n                      removeNote={removeNote}\n                      toggleDone={toggleDone}\n                    />\n                  </div>\n                </CSSTransition>\n              )}\n            </Route>\n          )\n        })}\n        {/* </TransitionGroup> */}\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'));\n\n\n"],"sourceRoot":""}