{"version":3,"sources":["img/arrow.svg","img/edit.svg","components/AddPage/AddPage.jsx","components/Alert/Alert.jsx","redux/reducer.js","components/Notes/Note/Dropdown.jsx","components/Notes/Note/TitleEditMode.jsx","components/Notes/Note/Note.jsx","components/Notes/Notes.jsx","components/Pages/Page/Page.jsx","components/Pages/Pages.jsx","components/Nav/Nav.jsx","App.jsx","redux/store.js","index.js"],"names":["module","exports","AddPage","addPageHandler","setShowAddPage","className","onClick","type","placeholder","onKeyDown","e","key","Alert","alertContent","setShowAlert","title","reducerSlice","createSlice","name","initialState","id","done","reducers","addPage","state","action","payload","removePage","addNote","noteTitle","pageName","console","log","unshift","Date","now","removeNote","noteId","filter","note","moveNote","fromPage","toPage","forEach","i","arr","splice","changeNote","toggleDone","actions","Dropdown","moveNoteHandler","showDropdown","allPages","length","page","map","TitleEditMode","changeNoteHandler","setTitleEditMode","autoFocus","defaultValue","onBlur","Note","removeNoteHandler","dispatch","useDispatch","useState","setShowDropdown","titleEditMode","readOnly","checked","src","Edit","alt","Arrow","Notes","addNoteHandler","to","Page","removePageHandler","Pages","Object","keys","Nav","href","App","useSelector","showAddPage","showAlert","setAlertContent","hideAlert","useRef","restartAlertsetTimeout","clearInterval","current","setTimeout","target","value","trim","some","toLowerCase","replace","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","exact","path","match","persistConfig","version","storage","roorReducer","combineReducers","reducer","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.84bd5b75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.7761680a.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.4dfa0c72.svg\";","import React from 'react'\r\n\r\nexport const AddPage = ({ addPageHandler, setShowAddPage }) => {\r\n  return (\r\n    <div className='add-page'>\r\n      <div className='page-heiding'>\r\n        <button className='btn btn-danger btn-sm' onClick={() => setShowAddPage(false)}>\r\n          Hide\r\n        </button>\r\n        <h2 className='text-right'>Add page</h2>\r\n      </div>\r\n      <input\r\n        type='text'\r\n        className='form-control'\r\n        placeholder='Enter page name'\r\n        onKeyDown={e => e.key === 'Enter' && addPageHandler(e)}\r\n      />\r\n      <hr />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './Alert.scss'\r\n\r\nexport const Alert = ({ alertContent, setShowAlert }) => {\r\n  return (\r\n    <div className={`alert alert-${alertContent.type} alert-dismissible`}>\r\n      <strong>Attention!</strong> {alertContent.title}\r\n      <button className='close' onClick={() => setShowAlert(false)}>\r\n        &times;\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst reducerSlice = createSlice({\r\n  name: 'main',\r\n  initialState: {\r\n    ['Покупки']: [\r\n      { id: 1, title: 'Купить хлеб', done: false },\r\n      { id: 2, title: 'Купить молоко', done: false },\r\n    ],\r\n    ['Домашние дела']: [\r\n      { id: 3, title: 'Убраться в комнате', done: false },\r\n      { id: 4, title: 'Помыть посуду', done: false },\r\n    ],\r\n  },\r\n  reducers: {\r\n    addPage(state, action) {\r\n      const pageName = action.payload\r\n      state[pageName] = []\r\n    },\r\n    removePage(state, action) {\r\n      const pageName = action.payload\r\n      delete state[pageName]\r\n    },\r\n    addNote(state, action) {\r\n      const { noteTitle, pageName } = action.payload\r\n      console.log(state)\r\n      state[pageName].unshift({ id: Date.now(), title: noteTitle, done: false })\r\n    },\r\n    removeNote(state, action) {\r\n      const { pageName, noteId } = action.payload\r\n      state[pageName] = state[pageName].filter(note => note.id !== noteId)\r\n    },\r\n    moveNote(state, action) {\r\n      const { fromPage, toPage, noteId } = action.payload\r\n      state[fromPage].forEach((note, i, arr) => {\r\n        if (note.id === noteId) {\r\n          state[toPage].unshift(note)\r\n          arr.splice(i, 1)\r\n        }\r\n      })\r\n    },\r\n    changeNote(state, action) {\r\n      const { noteTitle, pageName, noteId } = action.payload\r\n      state[pageName].forEach(note => {\r\n        if (note.id === noteId) {\r\n          note.title = noteTitle\r\n        }\r\n      })\r\n    },\r\n    toggleDone(state, action) {\r\n      const { pageName, noteId } = action.payload\r\n      state[pageName].forEach(note => {\r\n        if (note.id === noteId) {\r\n          note.done = !note.done\r\n        }\r\n      })\r\n    },\r\n  },\r\n})\r\n\r\nexport const { addPage, removePage, addNote, removeNote, moveNote, changeNote, toggleDone } = reducerSlice.actions\r\n\r\nexport default reducerSlice.reducer\r\n","import React from 'react'\r\nimport './Note.scss'\r\n\r\nexport const Dropdown = ({ moveNoteHandler, showDropdown, allPages, pageName, noteId }) => {\r\n  return (\r\n    <>\r\n      {showDropdown && (\r\n        <div className='dropdown'>\r\n          <h6>Where to move?</h6>\r\n          {allPages.length > 1 ? (\r\n            allPages\r\n              .filter(page => page !== pageName)\r\n              .map(page => {\r\n                return (\r\n                  <div key={page} className='dropdownItem' onClick={() => moveNoteHandler(pageName, page, noteId)}>\r\n                    <span>-</span>&nbsp;<span>{page}</span>\r\n                  </div>\r\n                )\r\n              })\r\n          ) : (\r\n            <div className='text-center'>No other pages</div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './Note.scss'\r\n\r\nexport const TitleEditMode = ({ changeNoteHandler, setTitleEditMode, pageName, noteId, title }) => {\r\n  return (\r\n    <input\r\n      onKeyDown={e => {\r\n        if (e.key === 'Enter') {\r\n          changeNoteHandler(e, pageName, noteId)\r\n          setTitleEditMode(false)\r\n        }\r\n      }}\r\n      autoFocus\r\n      className='form-control'\r\n      defaultValue={title}\r\n      onBlur={() => setTitleEditMode(false)}\r\n    />\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport './Note.scss'\r\nimport Arrow from '../../../img/arrow.svg'\r\nimport Edit from '../../../img/edit.svg'\r\nimport { useDispatch } from 'react-redux'\r\nimport { toggleDone } from '../../../redux/reducer'\r\nimport { Dropdown } from './Dropdown'\r\nimport { TitleEditMode } from './TitleEditMode'\r\n\r\nexport const Note = ({ changeNoteHandler, moveNoteHandler, allPages, pageName, noteId, title, done, removeNoteHandler }) => {\r\n  const dispatch = useDispatch()\r\n  const [showDropdown, setShowDropdown] = useState(false)\r\n  const [titleEditMode, setTitleEditMode] = useState(false)\r\n  return (\r\n    <li className='list-group-item'>\r\n      {titleEditMode ? (\r\n        <TitleEditMode\r\n          changeNoteHandler={changeNoteHandler}\r\n          setTitleEditMode={setTitleEditMode}\r\n          pageName={pageName}\r\n          noteId={noteId}\r\n          title={title}\r\n        />\r\n      ) : (\r\n        <>\r\n          <div className='note-content'>\r\n            <input type='checkbox' readOnly checked={done} onClick={() => dispatch(toggleDone({ pageName, noteId }))} />\r\n            &nbsp;&nbsp;\r\n            <span>{title}</span>\r\n            &nbsp;\r\n            <img onClick={() => setTitleEditMode(!titleEditMode)} className='edit' src={Edit} alt='' />\r\n          </div>\r\n          <div className='buttons'>\r\n            <button onClick={e => removeNoteHandler(pageName, noteId)} className='btn btn-outline-danger btn-sm'>\r\n              &times;\r\n            </button>\r\n            <button onClick={() => setShowDropdown(!showDropdown)} className='btn btn-primary btn-sm dropdownToggle'>\r\n              <img src={Arrow} alt=':' />\r\n              <Dropdown\r\n                moveNoteHandler={moveNoteHandler}\r\n                showDropdown={showDropdown}\r\n                allPages={allPages}\r\n                pageName={pageName}\r\n                noteId={noteId}\r\n              />\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </li>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Note } from './Note/Note'\r\nimport Arrow from '../../img/arrow.svg'\r\n\r\nexport const Notes = ({ changeNoteHandler, state, moveNoteHandler, addNoteHandler, allPages, page, removeNoteHandler }) => {\r\n  return (\r\n    <div className='notes'>\r\n      <div className='page-heiding'>\r\n        <NavLink to='/pages'>\r\n          <img className='come-back' src={Arrow} alt='come back' />\r\n        </NavLink>\r\n        <h2 className='text-right'>{page}</h2>\r\n      </div>\r\n      <input type='text' placeholder='Enter a note' className='form-control' onKeyDown={e => addNoteHandler(e, page)} />\r\n      <hr></hr>\r\n      <ul className='list-group'>\r\n        {state[page].length ? (\r\n          state[page].map(note => {\r\n            return (\r\n              <Note\r\n                changeNoteHandler={changeNoteHandler}\r\n                moveNoteHandler={moveNoteHandler}\r\n                allPages={allPages}\r\n                pageName={page}\r\n                key={note.id}\r\n                noteId={note.id}\r\n                title={note.title}\r\n                done={note.done}\r\n                removeNoteHandler={removeNoteHandler}\r\n              />\r\n            )\r\n          })\r\n        ) : (\r\n          <h2 className='text-center'>Page is empty...</h2>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Page.scss'\r\n\r\nexport const Page = ({ pageName, removePageHandler }) => {\r\n  return (\r\n    <div className='container page'>\r\n      <span>{pageName}</span>\r\n      <div className='buttons'>\r\n        <NavLink to={pageName} className='btn btn-dark mr-1'>\r\n          Open\r\n        </NavLink>\r\n        <button onClick={() => removePageHandler(pageName)} className='btn btn-danger'>\r\n          delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Page } from \"./Page/Page\"\r\n\r\nexport const Pages = ({ state, removePageHandler }) => {\r\n  return (\r\n    <div className='pages'>\r\n      {Object.keys(state).length ? (\r\n        Object.keys(state).map(page => {\r\n          return <Page removePageHandler={removePageHandler} key={page} pageName={page} />\r\n        })\r\n      ) : (\r\n        <h2 className='text-center'>The notebook is empty...</h2>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './Nav.scss'\r\n\r\nexport const Nav = ({ setShowAddPage }) => {\r\n  return (\r\n    <nav className='navbar navbar-expand-lg navbar-dark bg-dark'>\r\n      <div className='container'>\r\n        <span className='navbar-brand' href='#'>\r\n          <span className='logo'>NOTEBOOK</span>\r\n        </span>\r\n        <button className='btn btn-light ml-auto' onClick={() => setShowAddPage(true)}>\r\n          + Add page\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport './App.scss'\r\nimport { AddPage } from './components/AddPage/AddPage'\r\nimport { Alert } from './components/Alert/Alert'\r\nimport { Notes } from './components/Notes/Notes'\r\nimport { Pages } from './components/Pages/Pages'\r\nimport { Nav } from './components/Nav/Nav'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addNote, addPage, changeNote, moveNote, removeNote, removePage } from './redux/reducer'\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  const state = useSelector(state => state.state)\r\n\r\n  const [showAddPage, setShowAddPage] = useState(true)\r\n  const [showAlert, setShowAlert] = useState(false)\r\n  const [alertContent, setAlertContent] = useState({\r\n    type: 'success',\r\n    title: 'Page added',\r\n  })\r\n\r\n  const hideAlert = useRef()\r\n\r\n  const restartAlertsetTimeout = () => {\r\n    clearInterval(hideAlert.current)\r\n    hideAlert.current = setTimeout(() => {\r\n      setShowAlert(false)\r\n    }, 3000)\r\n    setShowAlert(true)\r\n  }\r\n\r\n  const addPageHandler = e => {\r\n    restartAlertsetTimeout()\r\n    if (e.target.value.trim()) {\r\n      if (Object.keys(state).some(page => page.toLowerCase() === e.target.value.replace(/ +/g, ' ').trim().toLowerCase())) {\r\n        setAlertContent({ type: 'warning', title: 'page  exists' })\r\n      } else {\r\n        dispatch(addPage(e.target.value.trim()))\r\n        setAlertContent({ type: 'success', title: 'Page added' })\r\n        e.target.value = ''\r\n      }\r\n    } else {\r\n      setAlertContent({ type: 'warning', title: 'Enter page title' })\r\n    }\r\n  }\r\n\r\n  const removePageHandler = pageName => {\r\n    restartAlertsetTimeout()\r\n    dispatch(removePage(pageName))\r\n    setAlertContent({ type: 'danger', title: 'Page deleted' })\r\n  }\r\n\r\n  const addNoteHandler = (e, pageName) => {\r\n    const noteTitle = e.target.value.trim()\r\n    if (e.key === 'Enter') {\r\n      restartAlertsetTimeout()\r\n      if (e.target.value.trim()) {\r\n        dispatch(addNote({ noteTitle, pageName }))\r\n        e.target.value = ''\r\n        setAlertContent({ type: 'success', title: 'Note added' })\r\n      } else {\r\n        setAlertContent({ type: 'warning', title: 'Enter note title' })\r\n      }\r\n    }\r\n  }\r\n\r\n  const removeNoteHandler = (pageName, noteId) => {\r\n    restartAlertsetTimeout()\r\n    dispatch(removeNote({ pageName, noteId }))\r\n    setAlertContent({ type: 'danger', title: 'Note deleted' })\r\n  }\r\n\r\n  const moveNoteHandler = (fromPage, toPage, noteId) => {\r\n    restartAlertsetTimeout()\r\n    dispatch(moveNote({ fromPage, toPage, noteId }))\r\n    setAlertContent({ type: 'success', title: 'Note moved' })\r\n  }\r\n\r\n  const changeNoteHandler = (e, pageName, noteId) => {\r\n    const noteTitle = e.target.value.trim()\r\n    restartAlertsetTimeout()\r\n    if (e.target.value.trim()) {\r\n      dispatch(changeNote({ noteTitle, pageName, noteId }))\r\n      setAlertContent({ type: 'success', title: 'Note changed' })\r\n    } else {\r\n      setAlertContent({ type: 'warning', title: 'Enter note title' })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Nav setShowAddPage={setShowAddPage} />\r\n      <CSSTransition in={showAlert} timeout={500} classNames='alert' mountOnEnter unmountOnExit>\r\n        <Alert alertContent={alertContent} setShowAlert={setShowAlert} />\r\n      </CSSTransition>\r\n      <Switch>\r\n        <Route exact path={['/', '/pages']}>\r\n          <h1 className=' text-center'>All pages</h1>\r\n        </Route>\r\n        <Route exact path='*'>\r\n          <h1 className=' text-center'>Notes</h1>\r\n        </Route>\r\n      </Switch>\r\n      <div className='container pt-4 all-pages'>\r\n        <Route exact path={['/', '/pages']}>\r\n          {({ match }) => (\r\n            <CSSTransition timeout={700} classNames='pages' in={match != null} unmountOnExit>\r\n              <div className='absolute'>\r\n                {showAddPage && <AddPage setShowAddPage={setShowAddPage} addPageHandler={addPageHandler} />}\r\n                <Pages state={state} removePageHandler={removePageHandler} />\r\n              </div>\r\n            </CSSTransition>\r\n          )}\r\n        </Route>\r\n        {Object.keys(state).map(page => (\r\n          <Route key={page} exact path={`/${page}`}>\r\n            {({ match }) => (\r\n              <CSSTransition timeout={700} classNames='page' in={match != null} unmountOnExit>\r\n                <div className='absolute'>\r\n                  <Notes\r\n                    changeNoteHandler={changeNoteHandler}\r\n                    state={state}\r\n                    moveNoteHandler={moveNoteHandler}\r\n                    addNoteHandler={addNoteHandler}\r\n                    allPages={Object.keys(state)}\r\n                    page={page}\r\n                    removeNoteHandler={removeNoteHandler}\r\n                  />\r\n                </div>\r\n              </CSSTransition>\r\n            )}\r\n          </Route>\r\n        ))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { FLUSH, PAUSE, PERSIST, persistReducer, persistStore, PURGE, REGISTER, REHYDRATE } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport reducer from './reducer'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  version: 1,\r\n  storage,\r\n}\r\nconst roorReducer = combineReducers({\r\n  state: reducer,\r\n})\r\nconst persistedReducer = persistReducer(persistConfig, roorReducer)\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n})\r\nconst persistor = persistStore(store)\r\nexport { store, persistor }\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport App from './App'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { store, persistor } from './redux/store'\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\n// ReactDOM.render(\r\n//   <HashRouter>\r\n//     <App />\r\n//   </HashRouter>,\r\n//   document.getElementById('root')\r\n// )\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}