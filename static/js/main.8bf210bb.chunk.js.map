{"version":3,"sources":["img/arrow.svg","components/AddPage/AddPage.jsx","components/Notes/Note/Note.jsx","components/Notes/Notes.jsx","components/Pages/Page/Page.jsx","components/Pages/Pages.jsx","App.jsx","index.js"],"names":["module","exports","AddPage","addPage","setShowAddPage","className","onClick","type","placeholder","onKeyDown","e","Note","pageName","id","title","done","removeNote","toggleDone","readOnly","checked","Notes","addNote","state","page","to","src","Arrow","alt","length","map","note","key","Page","removePage","Pages","Object","keys","hideAlert","App","useState","showAddPage","showAlert","setShowAlert","alertContent","setAlertContent","useHistory","JSON","parse","localStorage","getItem","setState","useEffect","setItem","stringify","clearInterval","setTimeout","target","value","trim","filter","toLowerCase","replace","obj","Date","now","href","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","exact","path","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8bf210bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.7761680a.svg\";","import React from \"react\"\r\n\r\nexport const AddPage = ({ addPage, setShowAddPage }) => {\r\n  return (\r\n    <div className=\"add-page\">\r\n      <div className=\"page-heiding\">\r\n        <button className=\"btn btn-danger btn-sm\" onClick={() => setShowAddPage(false)}>\r\n          Hide\r\n        </button>\r\n        <h2 className=\"text-right\">Add page</h2>\r\n      </div>\r\n      <input type=\"text\" className=\"form-control\" placeholder=\"Enter page name\" onKeyDown={e => addPage(e)} />\r\n      <hr />\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport \"./Note.scss\"\r\n\r\nexport const Note = ({ pageName, id, title, done, removeNote, toggleDone }) => (\r\n  <li className=\"list-group-item\">\r\n    <div className=\"note-content\">\r\n      <input type=\"checkbox\" readOnly checked={done} onClick={() => toggleDone(pageName, id)} />\r\n      &nbsp;&nbsp; {done ? <s>{title}</s> : <span>{title}</span>}\r\n    </div>\r\n    <button onClick={e => removeNote(e, pageName, id)} className=\"btn btn-outline-danger btn-sm\">\r\n      &times;\r\n    </button>\r\n  </li>\r\n)\r\n","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { Note } from \"./Note/Note\"\r\nimport Arrow from \"../../img/arrow.svg\"\r\n\r\nexport const Notes = ({ addNote, state, page, removeNote, toggleDone }) => {\r\n  return (\r\n    <div className=\"notes\">\r\n      <div className=\"page-heiding\">\r\n        <NavLink to=\"/pages\">\r\n          <img className=\"come-back\" src={Arrow} alt=\"come back\" />\r\n        </NavLink>\r\n        <h2 className=\"text-right\">{page}</h2>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter a note\"\r\n        className=\"form-control\"\r\n        onKeyDown={e => addNote(e, page)}\r\n      />\r\n      <hr></hr>\r\n      <ul className=\"list-group\">\r\n        {state[page].length ? (\r\n          state[page].map(note => {\r\n            return (\r\n              <Note\r\n                pageName={page}\r\n                key={note.id}\r\n                id={note.id}\r\n                title={note.title}\r\n                done={note.done}\r\n                removeNote={removeNote}\r\n                toggleDone={toggleDone}\r\n              />\r\n            )\r\n          })\r\n        ) : (\r\n          <h2 className=\"text-center\">Page is empty...</h2>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport \"./Page.scss\"\r\n\r\nexport const Page = ({ pageName, removePage }) => {\r\n  return (\r\n    <div className=\"container page\">\r\n      <span>{pageName}</span>\r\n      <div className=\"buttons\">\r\n        <NavLink to={pageName} className=\"btn btn-dark mr-1\">\r\n          Open\r\n        </NavLink>\r\n        <button onClick={() => removePage(pageName)} className=\"btn btn-danger\">\r\n          delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Page } from \"./Page/Page\"\r\n\r\nexport const Pages = ({ state, removePage }) => {\r\n  return (\r\n    <div className=\"pages\">\r\n      {Object.keys(state).length ? (\r\n        Object.keys(state).map(page => {\r\n          return <Page removePage={removePage} key={page} pageName={page} />\r\n        })\r\n      ) : (\r\n        <h2 className=\"text-center\">The notebook is empty...</h2>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { logDOM } from \"@testing-library/react\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { NavLink, Route, Switch, useHistory } from \"react-router-dom\"\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport \"./App.scss\"\r\nimport { AddPage } from \"./components/AddPage/AddPage\"\r\nimport { Notes } from \"./components/Notes/Notes\"\r\nimport { Pages } from \"./components/Pages/Pages\"\r\n\r\nlet hideAlert = null\r\nfunction App() {\r\n  const [showAddPage, setShowAddPage] = useState(false)\r\n  const [showAlert, setShowAlert] = useState(false)\r\n  const [alertContent, setAlertContent] = useState({\r\n    type: \"success\",\r\n    title: \"Page was created\",\r\n  })\r\n  const history = useHistory()\r\n  const [state, setState] = useState(JSON.parse(localStorage.getItem(\"state\")) || {})\r\n  useEffect(() => {\r\n    localStorage.setItem(\"state\", JSON.stringify(state))\r\n  }, [state])\r\n\r\n  const addPage = e => {\r\n    if (e.key === \"Enter\") {\r\n      clearInterval(hideAlert)\r\n      hideAlert = setTimeout(() => {\r\n        setShowAlert(false)\r\n      }, 3000)\r\n      setShowAlert(true)\r\n      if (e.target.value.trim()) {\r\n        if (\r\n          Object.keys(state).filter(\r\n            pageName => pageName.toLowerCase() === e.target.value.replace(/ +/g, \" \").trim().toLowerCase()\r\n          ).length\r\n        ) {\r\n          setAlertContent({ type: \"warning\", title: \"such page already exists\" })\r\n        } else {\r\n          setState({ [e.target.value.trim()]: [], ...state })\r\n          setAlertContent({ type: \"success\", title: \"Page was created\" })\r\n          e.target.value = \"\"\r\n        }\r\n      } else {\r\n        setAlertContent({ type: \"warning\", title: \"Enter page title\" })\r\n      }\r\n    }\r\n  }\r\n\r\n  const removePage = pageName => {\r\n    clearInterval(hideAlert)\r\n    hideAlert = setTimeout(() => {\r\n      setShowAlert(false)\r\n    }, 3000)\r\n    setShowAlert(true)\r\n    let obj = { ...state }\r\n    delete obj[pageName]\r\n    setState(obj)\r\n    setAlertContent({ type: \"danger\", title: \"Page deleted\" })\r\n  }\r\n\r\n  const addNote = (e, pageName) => {\r\n    if (e.key === \"Enter\") {\r\n      clearInterval(hideAlert)\r\n      hideAlert = setTimeout(() => {\r\n        setShowAlert(false)\r\n      }, 3000)\r\n      setShowAlert(true)\r\n      if (e.target.value.trim()) {\r\n        setState({\r\n          ...state,\r\n          [pageName]: [{ id: Date.now(), title: e.target.value.trim(), done: false }, ...state[pageName]],\r\n        })\r\n        e.target.value = \"\"\r\n        setAlertContent({ type: \"success\", title: \"Note was created\" })\r\n      } else {\r\n        setAlertContent({ type: \"warning\", title: \"Enter note title\" })\r\n      }\r\n    }\r\n  }\r\n\r\n  const removeNote = (e, pageName, id) => {\r\n    clearInterval(hideAlert)\r\n    hideAlert = setTimeout(() => {\r\n      setShowAlert(false)\r\n    }, 3000)\r\n    setShowAlert(true)\r\n    setState({\r\n      ...state,\r\n      [pageName]: state[pageName].filter(note => note.id !== id),\r\n    })\r\n    e.target.value = \"\"\r\n    setAlertContent({ type: \"danger\", title: \"Note deleted\" })\r\n  }\r\n\r\n  const toggleDone = (pageName, id) => {\r\n    setState({\r\n      ...state,\r\n      [pageName]: state[pageName].map(note => {\r\n        return note.id === id ? { ...note, done: !note.done } : note\r\n      }),\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <span className=\"navbar-brand\" href=\"#\">\r\n            <span className=\"logo\">NOTEBOOK</span>\r\n          </span>\r\n          <button className=\"btn btn-light ml-auto\" onClick={() => setShowAddPage(true)}>\r\n            + Add page\r\n          </button>\r\n        </div>\r\n      </nav>\r\n      <CSSTransition in={showAlert} timeout={500} classNames=\"alert\" mountOnEnter unmountOnExit>\r\n        <div className={`alert alert-${alertContent.type} alert-dismissible`}>\r\n          <strong>Attention!</strong> {alertContent.title}\r\n          <button className=\"close\" onClick={() => setShowAlert(false)}>\r\n            &times;\r\n          </button>\r\n        </div>\r\n      </CSSTransition>\r\n      <Switch>\r\n        <Route exact path={[\"/\", \"/pages\"]}>\r\n          <h1 className=\" text-center\">All pages</h1>\r\n        </Route>\r\n        <Route exact path=\"*\">\r\n          <h1 className=\" text-center\">Notes</h1>\r\n        </Route>\r\n      </Switch>\r\n      <div className=\"container pt-4 all-pages\">\r\n        <Route exact path={[\"/\", \"/pages\"]}>\r\n          {({ match }) => (\r\n            <CSSTransition timeout={700} classNames=\"pages\" in={match != null} unmountOnExit>\r\n              <div className=\"absolute\">\r\n                {showAddPage && <AddPage setShowAddPage={setShowAddPage} addPage={addPage} />}\r\n                <Pages state={state} removePage={removePage} />\r\n              </div>\r\n            </CSSTransition>\r\n          )}\r\n        </Route>\r\n        {Object.keys(state).map(page => {\r\n          return (\r\n            <Route key={page} exact path={`/${page}`}>\r\n              {({ match }) => (\r\n                <CSSTransition timeout={700} classNames=\"item\" in={match != null} unmountOnExit>\r\n                  <div className=\"absolute\">\r\n                    <Notes addNote={addNote} state={state} page={page} removeNote={removeNote} toggleDone={toggleDone} />\r\n                  </div>\r\n                </CSSTransition>\r\n              )}\r\n            </Route>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById('root'));\r\n"],"sourceRoot":""}