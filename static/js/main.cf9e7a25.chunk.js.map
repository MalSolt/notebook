{"version":3,"sources":["img/arrow.svg","img/edit.svg","redux/reducer.js","components/AddPage/AddPage.jsx","components/Alert/Alert.jsx","components/Notes/Note/Dropdown.jsx","components/Notes/Note/TitleEditMode.jsx","components/Notes/Note/Note.jsx","components/Notes/Notes.jsx","components/Pages/Page/Page.jsx","components/Pages/Pages.jsx","components/Nav/Nav.jsx","App.jsx","redux/store.js","index.js"],"names":["module","exports","reducerSlice","createSlice","name","initialState","Покупки","id","title","done","reducers","addPage","state","action","payload","removePage","addNote","noteTitle","pageName","console","log","unshift","Date","now","removeNote","noteId","filter","note","moveNote","fromPage","toPage","forEach","i","arr","splice","changeNote","toggleDone","actions","AddPage","setAlertContent","setShowAddPage","dispatch","useDispatch","useSelector","className","onClick","type","placeholder","onKeyDown","e","key","target","value","trim","Object","keys","some","page","toLowerCase","replace","addPageHandler","Alert","alertContent","setShowAlert","Dropdown","showDropdown","allPages","length","map","moveNoteHandler","TitleEditMode","setTitleEditMode","changeNoteHandler","autoFocus","defaultValue","onBlur","Note","useState","setShowDropdown","titleEditMode","readOnly","checked","src","Edit","alt","removeNoteHandler","Arrow","Notes","to","addNoteHandler","Page","removePageHandler","Pages","Nav","href","App","showAddPage","showAlert","hideAlert","useRef","useEffect","clearInterval","current","setTimeout","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","exact","path","match","persistConfig","version","storage","roorReducer","combineReducers","reducer","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,mC,wCCA3CD,EAAOC,QAAU,IAA0B,kC,+QCErCC,EAAeC,YAAY,CAC/BC,KAAM,OACNC,aAAc,CACZC,6CAAS,CACP,CAAEC,GAAI,EAAGC,MAAO,gEAAeC,MAAM,GACrC,CAAEF,GAAI,EAAGC,MAAO,4EAAiBC,MAAM,IAEzC,4EAAiB,CACf,CAAEF,GAAI,EAAGC,MAAO,qGAAsBC,MAAM,GAC5C,CAAEF,GAAI,EAAGC,MAAO,4EAAiBC,MAAM,KAG3CC,SAAU,CACRC,QADQ,SACAC,EAAOC,GAEbD,EADiBC,EAAOC,SACN,IAEpBC,WALQ,SAKGH,EAAOC,UAETD,EADUC,EAAOC,UAG1BE,QATQ,SASAJ,EAAOC,GAAS,IAAD,EACWA,EAAOC,QAA/BG,EADa,EACbA,UAAWC,EADE,EACFA,SACnBC,QAAQC,IAAIR,GACZA,EAAMM,GAAUG,QAAQ,CAAEd,GAAIe,KAAKC,MAAOf,MAAOS,EAAWR,MAAM,KAEpEe,WAdQ,SAcGZ,EAAOC,GAAS,IAAD,EACKA,EAAOC,QAA5BI,EADgB,EAChBA,SAAUO,EADM,EACNA,OAClBb,EAAMM,GAAYN,EAAMM,GAAUQ,QAAO,SAAAC,GAAI,OAAIA,EAAKpB,KAAOkB,MAE/DG,SAlBQ,SAkBChB,EAAOC,GAAS,IAAD,EACeA,EAAOC,QAApCe,EADc,EACdA,SAAUC,EADI,EACJA,OAAQL,EADJ,EACIA,OAC1Bb,EAAMiB,GAAUE,SAAQ,SAACJ,EAAMK,EAAGC,GAC5BN,EAAKpB,KAAOkB,IACdb,EAAMkB,GAAQT,QAAQM,GACtBM,EAAIC,OAAOF,EAAG,QAIpBG,WA3BQ,SA2BGvB,EAAOC,GAAS,IAAD,EACgBA,EAAOC,QAAvCG,EADgB,EAChBA,UAAWC,EADK,EACLA,SAAUO,EADL,EACKA,OAC7Bb,EAAMM,GAAUa,SAAQ,SAAAJ,GAClBA,EAAKpB,KAAOkB,IACdE,EAAKnB,MAAQS,OAInBmB,WAnCQ,SAmCGxB,EAAOC,GAAS,IAAD,EACKA,EAAOC,QAA5BI,EADgB,EAChBA,SAAUO,EADM,EACNA,OAClBb,EAAMM,GAAUa,SAAQ,SAAAJ,GAClBA,EAAKpB,KAAOkB,IACdE,EAAKlB,MAAQkB,EAAKlB,a,EAOkEP,EAAamC,QAA5F1B,E,EAAAA,QAASI,E,EAAAA,WAAYC,E,EAAAA,QAASQ,E,EAAAA,WAAYI,E,EAAAA,SAAUO,E,EAAAA,WAAYC,E,EAAAA,WAEhElC,IAAf,QC1DaoC,EAAU,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,gBAAiBC,EAAqB,EAArBA,eACnCC,EAAWC,cACX9B,EAAQ+B,aAAY,SAAA/B,GAAK,OAAIA,EAAMA,SAczC,OACE,yBAAKgC,UAAU,YACb,yBAAKA,UAAU,gBACb,4BAAQA,UAAU,wBAAwBC,QAAS,kBAAML,GAAe,KAAxE,QAGA,wBAAII,UAAU,cAAd,aAEF,2BACEE,KAAK,OACLF,UAAU,eACVG,YAAY,kBACZC,UAAW,SAAAC,GAAC,MAAc,UAAVA,EAAEC,KAzBD,SAAAD,GACjBA,EAAEE,OAAOC,MAAMC,OACbC,OAAOC,KAAK3C,GAAO4C,MAAK,SAAAC,GAAI,OAAIA,EAAKC,gBAAkBT,EAAEE,OAAOC,MAAMO,QAAQ,MAAO,KAAKN,OAAOK,iBACnGnB,EAAgB,CAAEO,KAAM,UAAWtC,MAAO,kBAE1CiC,EAAS9B,EAAQsC,EAAEE,OAAOC,MAAMC,SAChCd,EAAgB,CAAEO,KAAM,UAAWtC,MAAO,eAC1CyC,EAAEE,OAAOC,MAAQ,IAGnBb,EAAgB,CAAEO,KAAM,UAAWtC,MAAO,qBAeHoD,CAAeX,MAEtD,+BC/BOY,G,MAAQ,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aACpC,OACE,yBAAKnB,UAAS,sBAAiBkB,EAAahB,KAA9B,uBACZ,8CADF,IAC+BgB,EAAatD,MAC1C,4BAAQoC,UAAU,QAAQC,QAAS,kBAAMkB,GAAa,KAAtD,W,kDCFOC,EAAW,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,aAAcC,EAAkD,EAAlDA,SAAUhD,EAAwC,EAAxCA,SAAUO,EAA8B,EAA9BA,OAAQc,EAAsB,EAAtBA,gBAC7DE,EAAWC,cAKjB,OACE,oCACGuB,GACC,yBAAKrB,UAAU,YACb,8CACCsB,EAASC,OAAS,EACjBD,EACGxC,QAAO,SAAA+B,GAAI,OAAIA,IAASvC,KACxBkD,KAAI,SAAAX,GACH,OACE,yBAAKP,IAAKO,EAAMb,UAAU,eAAeC,QAAS,kBAd1C,SAAChB,EAAUC,EAAQL,GACzCgB,EAASb,EAAS,CAAEC,WAAUC,SAAQL,YACtCc,EAAgB,CAAEO,KAAM,UAAWtC,MAAO,eAY4B6D,CAAgBnD,EAAUuC,EAAMhC,KACtF,mCADF,OACsB,8BAAOgC,OAKnC,yBAAKb,UAAU,eAAf,qBCtBC0B,EAAgB,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,iBAAkBrD,EAA+C,EAA/CA,SAAUO,EAAqC,EAArCA,OAAQjB,EAA6B,EAA7BA,MAAO+B,EAAsB,EAAtBA,gBACnEE,EAAWC,cAUjB,OACE,2BACEM,UAAW,SAAAC,GACK,UAAVA,EAAEC,OAZc,SAACD,EAAG/B,EAAUO,GACtC,IAAMR,EAAYgC,EAAEE,OAAOC,MAAMC,OAC7BJ,EAAEE,OAAOC,MAAMC,QACjBZ,EAASN,EAAW,CAAElB,YAAWC,WAAUO,YAC3Cc,EAAgB,CAAEO,KAAM,UAAWtC,MAAO,kBAE1C+B,EAAgB,CAAEO,KAAM,UAAWtC,MAAO,qBAOtCgE,CAAkBvB,EAAG/B,EAAUO,GAC/B8C,GAAiB,KAGrBE,WAAS,EACT7B,UAAU,eACV8B,aAAclE,EACdmE,OAAQ,kBAAMJ,GAAiB,OClBxBK,EAAO,SAAC,GAAkE,IAAhErC,EAA+D,EAA/DA,gBAAiB2B,EAA8C,EAA9CA,SAAUhD,EAAoC,EAApCA,SAAUO,EAA0B,EAA1BA,OAAQjB,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAAW,EAC5CoE,oBAAS,GADmC,mBAC7EZ,EAD6E,KAC/Da,EAD+D,OAE1CD,oBAAS,GAFiC,mBAE7EE,EAF6E,KAE9DR,EAF8D,KAG9E9B,EAAWC,cAOjB,OACE,wBAAIE,UAAU,mBACXmC,EACC,kBAAC,EAAD,CACExC,gBAAiBA,EACjBgC,iBAAkBA,EAClBrD,SAAUA,EACVO,OAAQA,EACRjB,MAAOA,IAGT,oCACE,yBAAKoC,UAAU,gBACb,2BAAOE,KAAK,WAAWkC,UAAQ,EAACC,QAASxE,EAAMoC,QAAS,kBAAMJ,EAASL,EAAW,CAAElB,WAAUO,eADhG,WAGE,8BAAOjB,GAHT,OAKE,yBAAKqC,QAAS,kBAAM0B,GAAkBQ,IAAgBnC,UAAU,OAAOsC,IAAKC,IAAMC,IAAI,MAExF,yBAAKxC,UAAU,WACb,4BAAQC,QAAS,SAAAI,GAAC,OAzBF,SAAC/B,EAAUO,GACnCgB,EAASjB,EAAW,CAAEN,WAAUO,YAChCc,EAAgB,CAAEO,KAAM,SAAUtC,MAAO,iBAuBX6E,CAAkBnE,EAAUO,IAASmB,UAAU,iCAArE,QAGA,4BACE+B,OAAQ,kBAAMG,GAAgB,IAC9BjC,QAAS,kBAAMiC,GAAiBb,IAChCrB,UAAU,yCAEV,yBAAKsC,IAAKI,IAAOF,IAAI,MACrB,kBAAC,EAAD,CACE7C,gBAAiBA,EACjB0B,aAAcA,EACdC,SAAUA,EACVhD,SAAUA,EACVO,OAAQA,SC9CX8D,EAAQ,SAAC,GAA4D,IAA1Df,EAAyD,EAAzDA,kBAAmBjC,EAAsC,EAAtCA,gBAAiB2B,EAAqB,EAArBA,SAAUT,EAAW,EAAXA,KAC9D7C,EAAQ+B,aAAY,SAAA/B,GAAK,OAAIA,EAAMA,SACnC6B,EAAWC,cAejB,OACE,yBAAKE,UAAU,SACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAS4C,GAAG,UACV,yBAAK5C,UAAU,YAAYsC,IAAKI,IAAOF,IAAI,eAE7C,wBAAIxC,UAAU,cAAca,IAE9B,2BAAOX,KAAK,OAAOC,YAAY,eAAeH,UAAU,eAAeI,UAAW,SAAAC,GAAC,OArBhE,SAACA,EAAG/B,GACzB,IAAMD,EAAYgC,EAAEE,OAAOC,MAAMC,OACnB,UAAVJ,EAAEC,MACAD,EAAEE,OAAOC,MAAMC,QACjBZ,EAASzB,EAAQ,CAAEC,YAAWC,cAC9B+B,EAAEE,OAAOC,MAAQ,GACjBb,EAAgB,CAAEO,KAAM,UAAWtC,MAAO,gBAE1C+B,EAAgB,CAAEO,KAAM,UAAWtC,MAAO,sBAa2CiF,CAAexC,EAAGQ,MACzG,6BACA,wBAAIb,UAAU,cACXhC,EAAM6C,GAAMU,OACXvD,EAAM6C,GAAMW,KAAI,SAAAzC,GACd,OACE,kBAAC,EAAD,CACEY,gBAAiBA,EACjBiC,kBAAmBA,EACnBN,SAAUA,EACVhD,SAAUuC,EACVP,IAAKvB,EAAKpB,GACVkB,OAAQE,EAAKpB,GACbC,MAAOmB,EAAKnB,MACZC,KAAMkB,EAAKlB,UAKjB,wBAAImC,UAAU,eAAd,uBC9CG8C,G,MAAO,SAAC,GAAmC,IAAjCxE,EAAgC,EAAhCA,SAAUqB,EAAsB,EAAtBA,gBACzBE,EAAWC,cAKjB,OACE,yBAAKE,UAAU,kBACb,8BAAO1B,GACP,yBAAK0B,UAAU,WACb,kBAAC,IAAD,CAAS4C,GAAItE,EAAU0B,UAAU,qBAAjC,QAGA,4BAAQC,QAAS,kBAXG,SAAA3B,GACxBuB,EAAS1B,EAAWG,IACpBqB,EAAgB,CAAEO,KAAM,SAAUtC,MAAO,iBASdmF,CAAkBzE,IAAW0B,UAAU,kBAA9D,cCfKgD,EAAQ,SAAC,GAAyB,IAAvBrD,EAAsB,EAAtBA,gBAChB3B,EAAQ+B,aAAY,SAAA/B,GAAK,OAAIA,EAAMA,SAEzC,OACE,yBAAKgC,UAAU,SACZU,OAAOC,KAAK3C,GAAOuD,OAClBb,OAAOC,KAAK3C,GAAOwD,KAAI,SAAAX,GACrB,OAAO,kBAAC,EAAD,CAAMP,IAAKO,EAAMvC,SAAUuC,EAAMlB,gBAAiBA,OAG3D,wBAAIK,UAAU,eAAd,8BCVKiD,G,MAAM,SAAC,GAAwB,IAAtBrD,EAAqB,EAArBA,eACpB,OACE,yBAAKI,UAAU,+CACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,eAAekD,KAAK,KAClC,0BAAMlD,UAAU,QAAhB,aAEF,4BAAQA,UAAU,wBAAwBC,QAAS,kBAAML,GAAe,KAAxE,kBCHD,SAASuD,IACd,IAAMnF,EAAQ+B,aAAY,SAAA/B,GAAK,OAAIA,EAAMA,SADrB,EAEkBiE,oBAAS,GAF3B,mBAEbmB,EAFa,KAEAxD,EAFA,OAGcqC,oBAAS,GAHvB,mBAGboB,EAHa,KAGFlC,EAHE,OAIoBc,mBAAS,IAJ7B,mBAIbf,EAJa,KAICvB,EAJD,KAMd2D,EAAYC,mBAalB,OAJAC,qBAAU,WACRtC,EAAahB,OAPbuD,cAAcH,EAAUI,SACxBJ,EAAUI,QAAUC,YAAW,WAC7BxC,GAAa,KACZ,KACHA,GAAa,MAIZ,CAACD,IAGF,oCACE,kBAAC,EAAD,CAAKtB,eAAgBA,IACrB,kBAACgE,EAAA,EAAD,CAAeC,GAAIR,EAAWS,QAAS,IAAKC,WAAW,QAAQC,cAAY,EAACC,eAAa,GACvF,kBAAC,EAAD,CAAO/C,aAAcA,EAAcC,aAAcA,KAEnD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAM,CAAC,IAAK,WACvB,wBAAInE,UAAU,gBAAd,cAEF,kBAAC,IAAD,CAAOkE,OAAK,EAACC,KAAK,KAChB,wBAAInE,UAAU,gBAAd,WAGJ,yBAAKA,UAAU,4BACb,kBAAC,IAAD,CAAOkE,OAAK,EAACC,KAAM,CAAC,IAAK,YACtB,gBAAGC,EAAH,EAAGA,MAAH,OACC,kBAACR,EAAA,EAAD,CAAeE,QAAS,IAAKC,WAAW,QAAQF,GAAa,MAATO,EAAeH,eAAa,GAC9E,yBAAKjE,UAAU,YACZoD,GAAe,kBAAC,EAAD,CAASxD,eAAgBA,EAAgBD,gBAAiBA,IAC1E,kBAAC,EAAD,CAAOA,gBAAiBA,SAK/Be,OAAOC,KAAK3C,GAAOwD,KAAI,SAAAX,GAAI,OAC1B,kBAAC,IAAD,CAAOP,IAAKO,EAAMqD,OAAK,EAACC,KAAI,WAAMtD,KAC/B,gBAAGuD,EAAH,EAAGA,MAAH,OACC,kBAACR,EAAA,EAAD,CAAeE,QAAS,IAAKC,WAAW,OAAOF,GAAa,MAATO,EAAeH,eAAa,GAC7E,yBAAKjE,UAAU,YACb,kBAAC,EAAD,CAAOL,gBAAiBA,EAAiB2B,SAAUZ,OAAOC,KAAK3C,GAAQ6C,KAAMA,c,0BCnDzFwD,EAAgB,CACpB/D,IAAK,OACLgE,QAAS,EACTC,Q,OAAAA,GAEIC,EAAcC,YAAgB,CAClCzG,MAAO0G,IAEHC,EAAmBC,YAAeP,EAAeG,GAEjDK,EAAQC,YAAe,CAC3BJ,QAASC,EACTI,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,UAI1DC,EAAYC,YAAab,G,QCd/Bc,IAASC,OACP,kBAAC,IAAD,CAAUf,MAAOA,GACf,kBAAC,IAAD,CAAagB,QAAS,KAAMJ,UAAWA,GACrC,kBAAC,IAAD,KACE,kBAAC,EAAD,SAINK,SAASC,eAAe,W","file":"static/js/main.cf9e7a25.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.7761680a.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.4dfa0c72.svg\";","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst reducerSlice = createSlice({\r\n  name: 'main',\r\n  initialState: {\r\n    Покупки: [\r\n      { id: 1, title: 'Купить хлеб', done: false },\r\n      { id: 2, title: 'Купить молоко', done: false },\r\n    ],\r\n    'Домашние дела': [\r\n      { id: 3, title: 'Убраться в комнате', done: false },\r\n      { id: 4, title: 'Помыть посуду', done: false },\r\n    ],\r\n  },\r\n  reducers: {\r\n    addPage(state, action) {\r\n      const pageName = action.payload\r\n      state[pageName] = []\r\n    },\r\n    removePage(state, action) {\r\n      const pageName = action.payload\r\n      delete state[pageName]\r\n    },\r\n    addNote(state, action) {\r\n      const { noteTitle, pageName } = action.payload\r\n      console.log(state)\r\n      state[pageName].unshift({ id: Date.now(), title: noteTitle, done: false })\r\n    },\r\n    removeNote(state, action) {\r\n      const { pageName, noteId } = action.payload\r\n      state[pageName] = state[pageName].filter(note => note.id !== noteId)\r\n    },\r\n    moveNote(state, action) {\r\n      const { fromPage, toPage, noteId } = action.payload\r\n      state[fromPage].forEach((note, i, arr) => {\r\n        if (note.id === noteId) {\r\n          state[toPage].unshift(note)\r\n          arr.splice(i, 1)\r\n        }\r\n      })\r\n    },\r\n    changeNote(state, action) {\r\n      const { noteTitle, pageName, noteId } = action.payload\r\n      state[pageName].forEach(note => {\r\n        if (note.id === noteId) {\r\n          note.title = noteTitle\r\n        }\r\n      })\r\n    },\r\n    toggleDone(state, action) {\r\n      const { pageName, noteId } = action.payload\r\n      state[pageName].forEach(note => {\r\n        if (note.id === noteId) {\r\n          note.done = !note.done\r\n        }\r\n      })\r\n    },\r\n  },\r\n})\r\n\r\nexport const { addPage, removePage, addNote, removeNote, moveNote, changeNote, toggleDone } = reducerSlice.actions\r\n\r\nexport default reducerSlice.reducer\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addPage } from '../../redux/reducer'\r\n\r\nexport const AddPage = ({ setAlertContent, setShowAddPage }) => {\r\n  const dispatch = useDispatch()\r\n  const state = useSelector(state => state.state)\r\n  const addPageHandler = e => {\r\n    if (e.target.value.trim()) {\r\n      if (Object.keys(state).some(page => page.toLowerCase() === e.target.value.replace(/ +/g, ' ').trim().toLowerCase())) {\r\n        setAlertContent({ type: 'warning', title: 'page  exists' })\r\n      } else {\r\n        dispatch(addPage(e.target.value.trim()))\r\n        setAlertContent({ type: 'success', title: 'Page added' })\r\n        e.target.value = ''\r\n      }\r\n    } else {\r\n      setAlertContent({ type: 'warning', title: 'Enter page title' })\r\n    }\r\n  }\r\n  return (\r\n    <div className='add-page'>\r\n      <div className='page-heiding'>\r\n        <button className='btn btn-danger btn-sm' onClick={() => setShowAddPage(false)}>\r\n          Hide\r\n        </button>\r\n        <h2 className='text-right'>Add page</h2>\r\n      </div>\r\n      <input\r\n        type='text'\r\n        className='form-control'\r\n        placeholder='Enter page name'\r\n        onKeyDown={e => e.key === 'Enter' && addPageHandler(e)}\r\n      />\r\n      <hr />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './Alert.scss'\r\n\r\nexport const Alert = ({ alertContent, setShowAlert }) => {\r\n  return (\r\n    <div className={`alert alert-${alertContent.type} alert-dismissible`}>\r\n      <strong>Attention!</strong> {alertContent.title}\r\n      <button className='close' onClick={() => setShowAlert(false)}>\r\n        &times;\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { moveNote } from '../../../redux/reducer'\r\nimport './Note.scss'\r\n\r\nexport const Dropdown = ({ showDropdown, allPages, pageName, noteId, setAlertContent }) => {\r\n  const dispatch = useDispatch()\r\n  const moveNoteHandler = (fromPage, toPage, noteId) => {\r\n    dispatch(moveNote({ fromPage, toPage, noteId }))\r\n    setAlertContent({ type: 'success', title: 'Note moved' })\r\n  }\r\n  return (\r\n    <>\r\n      {showDropdown && (\r\n        <div className='dropdown'>\r\n          <h6>Where to move?</h6>\r\n          {allPages.length > 1 ? (\r\n            allPages\r\n              .filter(page => page !== pageName)\r\n              .map(page => {\r\n                return (\r\n                  <div key={page} className='dropdownItem' onClick={() => moveNoteHandler(pageName, page, noteId)}>\r\n                    <span>-</span>&nbsp;<span>{page}</span>\r\n                  </div>\r\n                )\r\n              })\r\n          ) : (\r\n            <div className='text-center'>No other pages</div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { changeNote } from '../../../redux/reducer'\r\nimport './Note.scss'\r\n\r\nexport const TitleEditMode = ({ setTitleEditMode, pageName, noteId, title, setAlertContent }) => {\r\n  const dispatch = useDispatch()\r\n  const changeNoteHandler = (e, pageName, noteId) => {\r\n    const noteTitle = e.target.value.trim()\r\n    if (e.target.value.trim()) {\r\n      dispatch(changeNote({ noteTitle, pageName, noteId }))\r\n      setAlertContent({ type: 'success', title: 'Note changed' })\r\n    } else {\r\n      setAlertContent({ type: 'warning', title: 'Enter note title' })\r\n    }\r\n  }\r\n  return (\r\n    <input\r\n      onKeyDown={e => {\r\n        if (e.key === 'Enter') {\r\n          changeNoteHandler(e, pageName, noteId)\r\n          setTitleEditMode(false)\r\n        }\r\n      }}\r\n      autoFocus\r\n      className='form-control'\r\n      defaultValue={title}\r\n      onBlur={() => setTitleEditMode(false)}\r\n    />\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport './Note.scss'\r\nimport Arrow from '../../../img/arrow.svg'\r\nimport Edit from '../../../img/edit.svg'\r\nimport { useDispatch } from 'react-redux'\r\nimport { removeNote, toggleDone } from '../../../redux/reducer'\r\nimport { Dropdown } from './Dropdown'\r\nimport { TitleEditMode } from './TitleEditMode'\r\n\r\nexport const Note = ({ setAlertContent, allPages, pageName, noteId, title, done }) => {\r\n  const [showDropdown, setShowDropdown] = useState(false)\r\n  const [titleEditMode, setTitleEditMode] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  const removeNoteHandler = (pageName, noteId) => {\r\n    dispatch(removeNote({ pageName, noteId }))\r\n    setAlertContent({ type: 'danger', title: 'Note deleted' })\r\n  }\r\n\r\n  return (\r\n    <li className='list-group-item'>\r\n      {titleEditMode ? (\r\n        <TitleEditMode\r\n          setAlertContent={setAlertContent}\r\n          setTitleEditMode={setTitleEditMode}\r\n          pageName={pageName}\r\n          noteId={noteId}\r\n          title={title}\r\n        />\r\n      ) : (\r\n        <>\r\n          <div className='note-content'>\r\n            <input type='checkbox' readOnly checked={done} onClick={() => dispatch(toggleDone({ pageName, noteId }))} />\r\n            &nbsp;&nbsp;\r\n            <span>{title}</span>\r\n            &nbsp;\r\n            <img onClick={() => setTitleEditMode(!titleEditMode)} className='edit' src={Edit} alt='' />\r\n          </div>\r\n          <div className='buttons'>\r\n            <button onClick={e => removeNoteHandler(pageName, noteId)} className='btn btn-outline-danger btn-sm'>\r\n              &times;\r\n            </button>\r\n            <button\r\n              onBlur={() => setShowDropdown(false)}\r\n              onClick={() => setShowDropdown(!showDropdown)}\r\n              className='btn btn-primary btn-sm dropdownToggle'\r\n            >\r\n              <img src={Arrow} alt=':' />\r\n              <Dropdown\r\n                setAlertContent={setAlertContent}\r\n                showDropdown={showDropdown}\r\n                allPages={allPages}\r\n                pageName={pageName}\r\n                noteId={noteId}\r\n              />\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </li>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Note } from './Note/Note'\r\nimport Arrow from '../../img/arrow.svg'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addNote } from '../../redux/reducer'\r\n\r\nexport const Notes = ({ changeNoteHandler, setAlertContent, allPages, page }) => {\r\n  const state = useSelector(state => state.state)\r\n  const dispatch = useDispatch()\r\n\r\n  const addNoteHandler = (e, pageName) => {\r\n    const noteTitle = e.target.value.trim()\r\n    if (e.key === 'Enter') {\r\n      if (e.target.value.trim()) {\r\n        dispatch(addNote({ noteTitle, pageName }))\r\n        e.target.value = ''\r\n        setAlertContent({ type: 'success', title: 'Note added' })\r\n      } else {\r\n        setAlertContent({ type: 'warning', title: 'Enter note title' })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='notes'>\r\n      <div className='page-heiding'>\r\n        <NavLink to='/pages'>\r\n          <img className='come-back' src={Arrow} alt='come back' />\r\n        </NavLink>\r\n        <h2 className='text-right'>{page}</h2>\r\n      </div>\r\n      <input type='text' placeholder='Enter a note' className='form-control' onKeyDown={e => addNoteHandler(e, page)} />\r\n      <hr></hr>\r\n      <ul className='list-group'>\r\n        {state[page].length ? (\r\n          state[page].map(note => {\r\n            return (\r\n              <Note\r\n                setAlertContent={setAlertContent}\r\n                changeNoteHandler={changeNoteHandler}\r\n                allPages={allPages}\r\n                pageName={page}\r\n                key={note.id}\r\n                noteId={note.id}\r\n                title={note.title}\r\n                done={note.done}\r\n              />\r\n            )\r\n          })\r\n        ) : (\r\n          <h2 className='text-center'>Page is empty...</h2>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Page.scss'\r\nimport { useDispatch } from 'react-redux'\r\nimport { removePage } from '../../../redux/reducer'\r\nexport const Page = ({ pageName, setAlertContent }) => {\r\n  const dispatch = useDispatch()\r\n  const removePageHandler = pageName => {\r\n    dispatch(removePage(pageName))\r\n    setAlertContent({ type: 'danger', title: 'Page deleted' })\r\n  }\r\n  return (\r\n    <div className='container page'>\r\n      <span>{pageName}</span>\r\n      <div className='buttons'>\r\n        <NavLink to={pageName} className='btn btn-dark mr-1'>\r\n          Open\r\n        </NavLink>\r\n        <button onClick={() => removePageHandler(pageName)} className='btn btn-danger'>\r\n          delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Page } from './Page/Page'\r\nimport { useSelector } from 'react-redux'\r\nexport const Pages = ({ setAlertContent }) => {\r\n  const state = useSelector(state => state.state)\r\n\r\n  return (\r\n    <div className='pages'>\r\n      {Object.keys(state).length ? (\r\n        Object.keys(state).map(page => {\r\n          return <Page key={page} pageName={page} setAlertContent={setAlertContent} />\r\n        })\r\n      ) : (\r\n        <h2 className='text-center'>The notebook is empty...</h2>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './Nav.scss'\r\n\r\nexport const Nav = ({ setShowAddPage }) => {\r\n  return (\r\n    <nav className='navbar navbar-expand-lg navbar-dark bg-dark'>\r\n      <div className='container'>\r\n        <span className='navbar-brand' href='#'>\r\n          <span className='logo'>NOTEBOOK</span>\r\n        </span>\r\n        <button className='btn btn-light ml-auto' onClick={() => setShowAddPage(true)}>\r\n          + Add page\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport './App.scss'\r\nimport { AddPage, Alert, Notes, Pages, Nav } from './components'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport function App() {\r\n  const state = useSelector(state => state.state)\r\n  const [showAddPage, setShowAddPage] = useState(true)\r\n  const [showAlert, setShowAlert] = useState(false)\r\n  const [alertContent, setAlertContent] = useState({})\r\n\r\n  const hideAlert = useRef()\r\n\r\n  const restartAlertsetTimeout = () => {\r\n    clearInterval(hideAlert.current)\r\n    hideAlert.current = setTimeout(() => {\r\n      setShowAlert(false)\r\n    }, 3000)\r\n    setShowAlert(true)\r\n  }\r\n  useEffect(() => {\r\n    alertContent.type && restartAlertsetTimeout()\r\n  }, [alertContent])\r\n\r\n  return (\r\n    <>\r\n      <Nav setShowAddPage={setShowAddPage} />\r\n      <CSSTransition in={showAlert} timeout={500} classNames='alert' mountOnEnter unmountOnExit>\r\n        <Alert alertContent={alertContent} setShowAlert={setShowAlert} />\r\n      </CSSTransition>\r\n      <Switch>\r\n        <Route exact path={['/', '/pages']}>\r\n          <h1 className=' text-center'>All pages</h1>\r\n        </Route>\r\n        <Route exact path='*'>\r\n          <h1 className=' text-center'>Notes</h1>\r\n        </Route>\r\n      </Switch>\r\n      <div className='container pt-4 all-pages'>\r\n        <Route exact path={['/', '/pages']}>\r\n          {({ match }) => (\r\n            <CSSTransition timeout={700} classNames='pages' in={match != null} unmountOnExit>\r\n              <div className='absolute'>\r\n                {showAddPage && <AddPage setShowAddPage={setShowAddPage} setAlertContent={setAlertContent} />}\r\n                <Pages setAlertContent={setAlertContent} />\r\n              </div>\r\n            </CSSTransition>\r\n          )}\r\n        </Route>\r\n        {Object.keys(state).map(page => (\r\n          <Route key={page} exact path={`/${page}`}>\r\n            {({ match }) => (\r\n              <CSSTransition timeout={700} classNames='page' in={match != null} unmountOnExit>\r\n                <div className='absolute'>\r\n                  <Notes setAlertContent={setAlertContent} allPages={Object.keys(state)} page={page} />\r\n                </div>\r\n              </CSSTransition>\r\n            )}\r\n          </Route>\r\n        ))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { FLUSH, PAUSE, PERSIST, persistReducer, persistStore, PURGE, REGISTER, REHYDRATE } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport reducer from './reducer'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  version: 1,\r\n  storage,\r\n}\r\nconst roorReducer = combineReducers({\r\n  state: reducer,\r\n})\r\nconst persistedReducer = persistReducer(persistConfig, roorReducer)\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n})\r\nconst persistor = persistStore(store)\r\nexport { store, persistor }\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport { App } from './App'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { store, persistor } from './redux/store'\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}